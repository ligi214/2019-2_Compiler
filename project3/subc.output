Terminals unused in grammar

   ASSIGNOP
   '/'
   '%'
   UNARY_OP


State 24 conflicts: 1 shift/reduce
State 144 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl compound_stmt

    9 type_specifier: TYPE
   10               | VOID
   11               | struct_specifier

   12 $@1: %empty

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}'
   14                 | STRUCT ID

   15 func_decl: type_specifier pointers ID '(' ')'
   16          | type_specifier pointers ID '(' VOID ')'

   17 @2: %empty

   18 func_decl: type_specifier pointers ID '(' @2 param_list ')'

   19 pointers: '*'
   20         | %empty

   21 param_list: param_decl
   22           | param_list ',' param_decl

   23 param_decl: type_specifier pointers ID
   24           | type_specifier pointers ID '[' const_expr ']'

   25 def_list: def_list def
   26         | %empty

   27 def: type_specifier pointers ID ';'
   28    | type_specifier pointers ID '[' const_expr ']' ';'
   29    | type_specifier ';'
   30    | func_decl ';'

   31 compound_stmt: '{' local_defs stmt_list '}'

   32 local_defs: def_list

   33 stmt_list: stmt_list stmt
   34          | %empty

   35 stmt: expr ';'

   36 $@3: %empty

   37 stmt: $@3 compound_stmt
   38     | RETURN ';'
   39     | RETURN expr ';'
   40     | ';'
   41     | IF '(' expr ')' stmt
   42     | IF '(' expr ')' stmt ELSE stmt
   43     | WHILE '(' expr ')' stmt
   44     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   45     | BREAK ';'
   46     | CONTINUE ';'

   47 expr_e: expr
   48       | %empty

   49 const_expr: expr

   50 expr: unary '=' expr
   51     | or_expr

   52 or_expr: or_list

   53 or_list: or_list LOGICAL_OR and_expr
   54        | and_expr

   55 and_expr: and_list

   56 and_list: and_list LOGICAL_AND binary
   57         | binary

   58 binary: binary RELOP binary
   59       | binary EQUOP binary
   60       | binary '+' binary
   61       | binary '-' binary
   62       | unary

   63 unary: '(' expr ')'
   64      | '(' unary ')'
   65      | INTEGER_CONST
   66      | CHAR_CONST
   67      | STRING
   68      | NULL_TOKEN
   69      | ID
   70      | '-' unary
   71      | '!' unary
   72      | unary INCOP
   73      | unary DECOP
   74      | INCOP unary
   75      | DECOP unary
   76      | '&' unary
   77      | '*' unary
   78      | unary '[' expr ']'
   79      | unary '.' ID
   80      | unary STRUCTOP ID
   81      | unary '(' args ')'
   82      | unary '(' ')'

   83 args: expr
   84     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 71
'%' (37)
'&' (38) 76
'(' (40) 15 16 18 41 42 43 44 63 64 81 82
')' (41) 15 16 18 41 42 43 44 63 64 81 82
'*' (42) 19 77
'+' (43) 60
',' (44) 22 84
'-' (45) 61 70
'.' (46) 79
'/' (47)
';' (59) 4 5 6 7 27 28 29 30 35 38 39 40 44 45 46
'=' (61) 50
'[' (91) 5 24 28 78
']' (93) 5 24 28 78
'{' (123) 13 31
'}' (125) 13 31
error (256)
ASSIGNOP (258)
LOGICAL_OR (259) 53
LOGICAL_AND (260) 56
EQUOP (261) 59
RELOP (262) 58
INCOP (263) 72 74
DECOP (264) 73 75
UNARY_OP (265)
STRUCTOP (266) 80
TYPE (267) 9
VOID (268) 10 16
NULL_TOKEN (269) 68
STRUCT (270) 13 14
RETURN (271) 38 39
IF (272) 41 42
ELSE (273) 42
WHILE (274) 43
FOR (275) 44
BREAK (276) 45
CONTINUE (277) 46
ID (278) 4 5 13 14 15 16 18 23 24 27 28 69 79 80
INTEGER_CONST (279) 65
CHAR_CONST (280) 66
STRING (281) 67


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
ext_def_list (46)
    on left: 2 3, on right: 1 2
ext_def (47)
    on left: 4 5 6 7 8, on right: 2
type_specifier (48)
    on left: 9 10 11, on right: 4 5 7 15 16 18 23 24 27 28 29
struct_specifier (49)
    on left: 13 14, on right: 11
$@1 (50)
    on left: 12, on right: 13
func_decl (51)
    on left: 15 16 18, on right: 6 8 30
@2 (52)
    on left: 17, on right: 18
pointers (53)
    on left: 19 20, on right: 4 5 15 16 18 23 24 27 28
param_list (54)
    on left: 21 22, on right: 18 22
param_decl (55)
    on left: 23 24, on right: 21 22
def_list (56)
    on left: 25 26, on right: 13 25 32
def (57)
    on left: 27 28 29 30, on right: 25
compound_stmt (58)
    on left: 31, on right: 8 37
local_defs (59)
    on left: 32, on right: 31
stmt_list (60)
    on left: 33 34, on right: 31 33
stmt (61)
    on left: 35 37 38 39 40 41 42 43 44 45 46, on right: 33 41 42 43
    44
$@3 (62)
    on left: 36, on right: 37
expr_e (63)
    on left: 47 48, on right: 44
const_expr (64)
    on left: 49, on right: 5 24 28
expr (65)
    on left: 50 51, on right: 35 39 41 42 43 47 49 50 63 78 83 84
or_expr (66)
    on left: 52, on right: 51
or_list (67)
    on left: 53 54, on right: 52 53
and_expr (68)
    on left: 55, on right: 53 54
and_list (69)
    on left: 56 57, on right: 55 56
binary (70)
    on left: 58 59 60 61 62, on right: 56 57 58 59 60 61
unary (71)
    on left: 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
    81 82, on right: 50 62 64 70 71 72 73 74 75 76 77 78 79 80 81 82
args (72)
    on left: 83 84, on right: 81 84


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

    9 type_specifier: TYPE .

    $default  reduce using rule 9 (type_specifier)


State 5

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 6

   13 struct_specifier: STRUCT . ID '{' $@1 def_list '}'
   14                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   18          | type_specifier . pointers ID '(' @2 param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 20 (pointers)

    pointers  go to state 14


State 9

   11 type_specifier: struct_specifier .

    $default  reduce using rule 11 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    8        | func_decl . compound_stmt

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16

    compound_stmt  go to state 17


State 11

   13 struct_specifier: STRUCT ID . '{' $@1 def_list '}'
   14                 | STRUCT ID .

    '{'  shift, and go to state 18

    $default  reduce using rule 14 (struct_specifier)


State 12

   19 pointers: '*' .

    $default  reduce using rule 19 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   18          | type_specifier pointers . ID '(' @2 param_list ')'

    ID  shift, and go to state 19


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

   31 compound_stmt: '{' . local_defs stmt_list '}'

    $default  reduce using rule 26 (def_list)

    def_list    go to state 20
    local_defs  go to state 21


State 17

    8 ext_def: func_decl compound_stmt .

    $default  reduce using rule 8 (ext_def)


State 18

   13 struct_specifier: STRUCT ID '{' . $@1 def_list '}'

    $default  reduce using rule 12 ($@1)

    $@1  go to state 22


State 19

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   18          | type_specifier pointers ID . '(' @2 param_list ')'

    '['  shift, and go to state 23
    '('  shift, and go to state 24
    ';'  shift, and go to state 25


State 20

   25 def_list: def_list . def
   32 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 32 (local_defs)

    type_specifier    go to state 26
    struct_specifier  go to state 9
    func_decl         go to state 27
    def               go to state 28


State 21

   31 compound_stmt: '{' local_defs . stmt_list '}'

    $default  reduce using rule 34 (stmt_list)

    stmt_list  go to state 29


State 22

   13 struct_specifier: STRUCT ID '{' $@1 . def_list '}'

    $default  reduce using rule 26 (def_list)

    def_list  go to state 30


State 23

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    const_expr  go to state 43
    expr        go to state 44
    or_expr     go to state 45
    or_list     go to state 46
    and_expr    go to state 47
    and_list    go to state 48
    binary      go to state 49
    unary       go to state 50


State 24

   15 func_decl: type_specifier pointers ID '(' . ')'
   16          | type_specifier pointers ID '(' . VOID ')'
   18          | type_specifier pointers ID '(' . @2 param_list ')'

    ')'   shift, and go to state 51
    VOID  shift, and go to state 52

    VOID      [reduce using rule 17 (@2)]
    $default  reduce using rule 17 (@2)

    @2  go to state 53


State 25

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 26

   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   18          | type_specifier . pointers ID '(' @2 param_list ')'
   27 def: type_specifier . pointers ID ';'
   28    | type_specifier . pointers ID '[' const_expr ']' ';'
   29    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 54

    $default  reduce using rule 20 (pointers)

    pointers  go to state 55


State 27

   30 def: func_decl . ';'

    ';'  shift, and go to state 56


State 28

   25 def_list: def_list def .

    $default  reduce using rule 25 (def_list)


State 29

   31 compound_stmt: '{' local_defs stmt_list . '}'
   33 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    ';'            shift, and go to state 63
    '}'            shift, and go to state 64

    $default  reduce using rule 36 ($@3)

    stmt      go to state 65
    $@3       go to state 66
    expr      go to state 67
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 30

   13 struct_specifier: STRUCT ID '{' $@1 def_list . '}'
   25 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 68

    type_specifier    go to state 26
    struct_specifier  go to state 9
    func_decl         go to state 27
    def               go to state 28


State 31

   76 unary: '&' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    unary  go to state 69


State 32

   70 unary: '-' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    unary  go to state 70


State 33

   77 unary: '*' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    unary  go to state 71


State 34

   71 unary: '!' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    unary  go to state 72


State 35

   74 unary: INCOP . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    unary  go to state 73


State 36

   75 unary: DECOP . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    unary  go to state 74


State 37

   63 unary: '(' . expr ')'
   64      | '(' . unary ')'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    expr      go to state 75
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 76


State 38

   68 unary: NULL_TOKEN .

    $default  reduce using rule 68 (unary)


State 39

   69 unary: ID .

    $default  reduce using rule 69 (unary)


State 40

   65 unary: INTEGER_CONST .

    $default  reduce using rule 65 (unary)


State 41

   66 unary: CHAR_CONST .

    $default  reduce using rule 66 (unary)


State 42

   67 unary: STRING .

    $default  reduce using rule 67 (unary)


State 43

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 77


State 44

   49 const_expr: expr .

    $default  reduce using rule 49 (const_expr)


State 45

   51 expr: or_expr .

    $default  reduce using rule 51 (expr)


State 46

   52 or_expr: or_list .
   53 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 78

    $default  reduce using rule 52 (or_expr)


State 47

   54 or_list: and_expr .

    $default  reduce using rule 54 (or_list)


State 48

   55 and_expr: and_list .
   56 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 79

    $default  reduce using rule 55 (and_expr)


State 49

   57 and_list: binary .
   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   61       | binary . '-' binary

    EQUOP  shift, and go to state 80
    RELOP  shift, and go to state 81
    '+'    shift, and go to state 82
    '-'    shift, and go to state 83

    $default  reduce using rule 57 (and_list)


State 50

   50 expr: unary . '=' expr
   62 binary: unary .
   72 unary: unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    '='       shift, and go to state 84
    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 62 (binary)


State 51

   15 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 15 (func_decl)


State 52

   16 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 91


State 53

   18 func_decl: type_specifier pointers ID '(' @2 . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 92
    struct_specifier  go to state 9
    param_list        go to state 93
    param_decl        go to state 94


State 54

   29 def: type_specifier ';' .

    $default  reduce using rule 29 (def)


State 55

   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   18          | type_specifier pointers . ID '(' @2 param_list ')'
   27 def: type_specifier pointers . ID ';'
   28    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 95


State 56

   30 def: func_decl ';' .

    $default  reduce using rule 30 (def)


State 57

   38 stmt: RETURN . ';'
   39     | RETURN . expr ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    ';'            shift, and go to state 96

    expr      go to state 97
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 58

   41 stmt: IF . '(' expr ')' stmt
   42     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 98


State 59

   43 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 99


State 60

   44 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 100


State 61

   45 stmt: BREAK . ';'

    ';'  shift, and go to state 101


State 62

   46 stmt: CONTINUE . ';'

    ';'  shift, and go to state 102


State 63

   40 stmt: ';' .

    $default  reduce using rule 40 (stmt)


State 64

   31 compound_stmt: '{' local_defs stmt_list '}' .

    $default  reduce using rule 31 (compound_stmt)


State 65

   33 stmt_list: stmt_list stmt .

    $default  reduce using rule 33 (stmt_list)


State 66

   37 stmt: $@3 . compound_stmt

    '{'  shift, and go to state 16

    compound_stmt  go to state 103


State 67

   35 stmt: expr . ';'

    ';'  shift, and go to state 104


State 68

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}' .

    $default  reduce using rule 13 (struct_specifier)


State 69

   72 unary: unary . INCOP
   73      | unary . DECOP
   76      | '&' unary .
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 76 (unary)


State 70

   70 unary: '-' unary .
   72      | unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 70 (unary)


State 71

   72 unary: unary . INCOP
   73      | unary . DECOP
   77      | '*' unary .
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 77 (unary)


State 72

   71 unary: '!' unary .
   72      | unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 71 (unary)


State 73

   72 unary: unary . INCOP
   73      | unary . DECOP
   74      | INCOP unary .
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 74 (unary)


State 74

   72 unary: unary . INCOP
   73      | unary . DECOP
   75      | DECOP unary .
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 75 (unary)


State 75

   63 unary: '(' expr . ')'

    ')'  shift, and go to state 105


State 76

   50 expr: unary . '=' expr
   62 binary: unary .
   64 unary: '(' unary . ')'
   72      | unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    '='       shift, and go to state 84
    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    ')'       shift, and go to state 106
    '.'       shift, and go to state 90

    $default  reduce using rule 62 (binary)


State 77

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 107


State 78

   53 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    and_expr  go to state 108
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 109


State 79

   56 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    binary  go to state 110
    unary   go to state 109


State 80

   59 binary: binary EQUOP . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    binary  go to state 111
    unary   go to state 109


State 81

   58 binary: binary RELOP . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    binary  go to state 112
    unary   go to state 109


State 82

   60 binary: binary '+' . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    binary  go to state 113
    unary   go to state 109


State 83

   61 binary: binary '-' . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    binary  go to state 114
    unary   go to state 109


State 84

   50 expr: unary '=' . expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    expr      go to state 115
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 85

   72 unary: unary INCOP .

    $default  reduce using rule 72 (unary)


State 86

   73 unary: unary DECOP .

    $default  reduce using rule 73 (unary)


State 87

   80 unary: unary STRUCTOP . ID

    ID  shift, and go to state 116


State 88

   78 unary: unary '[' . expr ']'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    expr      go to state 117
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 89

   81 unary: unary '(' . args ')'
   82      | unary '(' . ')'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ')'            shift, and go to state 118
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    expr      go to state 119
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50
    args      go to state 120


State 90

   79 unary: unary '.' . ID

    ID  shift, and go to state 121


State 91

   16 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 16 (func_decl)


State 92

   23 param_decl: type_specifier . pointers ID
   24           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 20 (pointers)

    pointers  go to state 122


State 93

   18 func_decl: type_specifier pointers ID '(' @2 param_list . ')'
   22 param_list: param_list . ',' param_decl

    ','  shift, and go to state 123
    ')'  shift, and go to state 124


State 94

   21 param_list: param_decl .

    $default  reduce using rule 21 (param_list)


State 95

   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   18          | type_specifier pointers ID . '(' @2 param_list ')'
   27 def: type_specifier pointers ID . ';'
   28    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 125
    '('  shift, and go to state 24
    ';'  shift, and go to state 126


State 96

   38 stmt: RETURN ';' .

    $default  reduce using rule 38 (stmt)


State 97

   39 stmt: RETURN expr . ';'

    ';'  shift, and go to state 127


State 98

   41 stmt: IF '(' . expr ')' stmt
   42     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    expr      go to state 128
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 99

   43 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    expr      go to state 129
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 100

   44 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    $default  reduce using rule 48 (expr_e)

    expr_e    go to state 130
    expr      go to state 131
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 101

   45 stmt: BREAK ';' .

    $default  reduce using rule 45 (stmt)


State 102

   46 stmt: CONTINUE ';' .

    $default  reduce using rule 46 (stmt)


State 103

   37 stmt: $@3 compound_stmt .

    $default  reduce using rule 37 (stmt)


State 104

   35 stmt: expr ';' .

    $default  reduce using rule 35 (stmt)


State 105

   63 unary: '(' expr ')' .

    $default  reduce using rule 63 (unary)


State 106

   64 unary: '(' unary ')' .

    $default  reduce using rule 64 (unary)


State 107

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 108

   53 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 53 (or_list)


State 109

   62 binary: unary .
   72 unary: unary . INCOP
   73      | unary . DECOP
   78      | unary . '[' expr ']'
   79      | unary . '.' ID
   80      | unary . STRUCTOP ID
   81      | unary . '(' args ')'
   82      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 62 (binary)


State 110

   56 and_list: and_list LOGICAL_AND binary .
   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   61       | binary . '-' binary

    EQUOP  shift, and go to state 80
    RELOP  shift, and go to state 81
    '+'    shift, and go to state 82
    '-'    shift, and go to state 83

    $default  reduce using rule 56 (and_list)


State 111

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   59       | binary EQUOP binary .
   60       | binary . '+' binary
   61       | binary . '-' binary

    RELOP  shift, and go to state 81
    '+'    shift, and go to state 82
    '-'    shift, and go to state 83

    $default  reduce using rule 59 (binary)


State 112

   58 binary: binary . RELOP binary
   58       | binary RELOP binary .
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   61       | binary . '-' binary

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83

    $default  reduce using rule 58 (binary)


State 113

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   60       | binary '+' binary .
   61       | binary . '-' binary

    $default  reduce using rule 60 (binary)


State 114

   58 binary: binary . RELOP binary
   59       | binary . EQUOP binary
   60       | binary . '+' binary
   61       | binary . '-' binary
   61       | binary '-' binary .

    $default  reduce using rule 61 (binary)


State 115

   50 expr: unary '=' expr .

    $default  reduce using rule 50 (expr)


State 116

   80 unary: unary STRUCTOP ID .

    $default  reduce using rule 80 (unary)


State 117

   78 unary: unary '[' expr . ']'

    ']'  shift, and go to state 132


State 118

   82 unary: unary '(' ')' .

    $default  reduce using rule 82 (unary)


State 119

   83 args: expr .

    $default  reduce using rule 83 (args)


State 120

   81 unary: unary '(' args . ')'
   84 args: args . ',' expr

    ','  shift, and go to state 133
    ')'  shift, and go to state 134


State 121

   79 unary: unary '.' ID .

    $default  reduce using rule 79 (unary)


State 122

   23 param_decl: type_specifier pointers . ID
   24           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 135


State 123

   22 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 92
    struct_specifier  go to state 9
    param_decl        go to state 136


State 124

   18 func_decl: type_specifier pointers ID '(' @2 param_list ')' .

    $default  reduce using rule 18 (func_decl)


State 125

   28 def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    const_expr  go to state 137
    expr        go to state 44
    or_expr     go to state 45
    or_list     go to state 46
    and_expr    go to state 47
    and_list    go to state 48
    binary      go to state 49
    unary       go to state 50


State 126

   27 def: type_specifier pointers ID ';' .

    $default  reduce using rule 27 (def)


State 127

   39 stmt: RETURN expr ';' .

    $default  reduce using rule 39 (stmt)


State 128

   41 stmt: IF '(' expr . ')' stmt
   42     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 138


State 129

   43 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 139


State 130

   44 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 140


State 131

   47 expr_e: expr .

    $default  reduce using rule 47 (expr_e)


State 132

   78 unary: unary '[' expr ']' .

    $default  reduce using rule 78 (unary)


State 133

   84 args: args ',' . expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    expr      go to state 141
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 134

   81 unary: unary '(' args ')' .

    $default  reduce using rule 81 (unary)


State 135

   23 param_decl: type_specifier pointers ID .
   24           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 142

    $default  reduce using rule 23 (param_decl)


State 136

   22 param_list: param_list ',' param_decl .

    $default  reduce using rule 22 (param_list)


State 137

   28 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 143


State 138

   41 stmt: IF '(' expr ')' . stmt
   42     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    ';'            shift, and go to state 63

    $default  reduce using rule 36 ($@3)

    stmt      go to state 144
    $@3       go to state 66
    expr      go to state 67
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 139

   43 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    ';'            shift, and go to state 63

    $default  reduce using rule 36 ($@3)

    stmt      go to state 145
    $@3       go to state 66
    expr      go to state 67
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 140

   44 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    $default  reduce using rule 48 (expr_e)

    expr_e    go to state 146
    expr      go to state 131
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 141

   84 args: args ',' expr .

    $default  reduce using rule 84 (args)


State 142

   24 param_decl: type_specifier pointers ID '[' . const_expr ']'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    const_expr  go to state 147
    expr        go to state 44
    or_expr     go to state 45
    or_list     go to state 46
    and_expr    go to state 47
    and_list    go to state 48
    binary      go to state 49
    unary       go to state 50


State 143

   28 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 148


State 144

   41 stmt: IF '(' expr ')' stmt .
   42     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 149

    ELSE      [reduce using rule 41 (stmt)]
    $default  reduce using rule 41 (stmt)


State 145

   43 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 43 (stmt)


State 146

   44 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 150


State 147

   24 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 151


State 148

   28 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 28 (def)


State 149

   42 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    ';'            shift, and go to state 63

    $default  reduce using rule 36 ($@3)

    stmt      go to state 152
    $@3       go to state 66
    expr      go to state 67
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 150

   44 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    $default  reduce using rule 48 (expr_e)

    expr_e    go to state 153
    expr      go to state 131
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 151

   24 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 24 (param_decl)


State 152

   42 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 42 (stmt)


State 153

   44 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 154


State 154

   44 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    ';'            shift, and go to state 63

    $default  reduce using rule 36 ($@3)

    stmt      go to state 155
    $@3       go to state 66
    expr      go to state 67
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 155

   44 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 44 (stmt)
