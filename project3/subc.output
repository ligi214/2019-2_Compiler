Terminals unused in grammar

   ASSIGNOP
   '/'
   '%'
   UNARY_OP


State 24 conflicts: 1 shift/reduce
State 143 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl compound_stmt

    9 type_specifier: TYPE
   10               | VOID
   11               | struct_specifier

   12 $@1: %empty

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}'
   14                 | STRUCT ID

   15 func_decl: type_specifier pointers ID '(' ')'
   16          | type_specifier pointers ID '(' VOID ')'

   17 @2: %empty

   18 func_decl: type_specifier pointers ID '(' @2 param_list ')'

   19 pointers: '*'
   20         | %empty

   21 param_list: param_decl
   22           | param_list ',' param_decl

   23 param_decl: type_specifier pointers ID
   24           | type_specifier pointers ID '[' const_expr ']'

   25 def_list: def_list def
   26         | %empty

   27 def: type_specifier pointers ID ';'
   28    | type_specifier pointers ID '[' const_expr ']' ';'
   29    | type_specifier ';'
   30    | func_decl ';'

   31 compound_stmt: '{' local_defs stmt_list '}'

   32 local_defs: def_list

   33 stmt_list: stmt_list stmt
   34          | %empty

   35 stmt: expr ';'
   36     | compound_stmt
   37     | RETURN ';'
   38     | RETURN expr ';'
   39     | ';'
   40     | IF '(' expr ')' stmt
   41     | IF '(' expr ')' stmt ELSE stmt
   42     | WHILE '(' expr ')' stmt
   43     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   44     | BREAK ';'
   45     | CONTINUE ';'

   46 expr_e: expr
   47       | %empty

   48 const_expr: expr

   49 expr: unary '=' expr
   50     | or_expr

   51 or_expr: or_list

   52 or_list: or_list LOGICAL_OR and_expr
   53        | and_expr

   54 and_expr: and_list

   55 and_list: and_list LOGICAL_AND binary
   56         | binary

   57 binary: binary RELOP binary
   58       | binary EQUOP binary
   59       | binary '+' binary
   60       | binary '-' binary
   61       | unary

   62 unary: '(' expr ')'
   63      | '(' unary ')'
   64      | INTEGER_CONST
   65      | CHAR_CONST
   66      | STRING
   67      | NULL_TOKEN
   68      | ID
   69      | '-' unary
   70      | '!' unary
   71      | unary INCOP
   72      | unary DECOP
   73      | INCOP unary
   74      | DECOP unary
   75      | '&' unary
   76      | '*' unary
   77      | unary '[' expr ']'
   78      | unary '.' ID
   79      | unary STRUCTOP ID
   80      | unary '(' args ')'
   81      | unary '(' ')'

   82 args: expr
   83     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 70
'%' (37)
'&' (38) 75
'(' (40) 15 16 18 40 41 42 43 62 63 80 81
')' (41) 15 16 18 40 41 42 43 62 63 80 81
'*' (42) 19 76
'+' (43) 59
',' (44) 22 83
'-' (45) 60 69
'.' (46) 78
'/' (47)
';' (59) 4 5 6 7 27 28 29 30 35 37 38 39 43 44 45
'=' (61) 49
'[' (91) 5 24 28 77
']' (93) 5 24 28 77
'{' (123) 13 31
'}' (125) 13 31
error (256)
ASSIGNOP (258)
LOGICAL_OR (259) 52
LOGICAL_AND (260) 55
EQUOP (261) 58
RELOP (262) 57
INCOP (263) 71 73
DECOP (264) 72 74
UNARY_OP (265)
STRUCTOP (266) 79
TYPE (267) 9
VOID (268) 10 16
NULL_TOKEN (269) 67
STRUCT (270) 13 14
RETURN (271) 37 38
IF (272) 40 41
ELSE (273) 41
WHILE (274) 42
FOR (275) 43
BREAK (276) 44
CONTINUE (277) 45
ID (278) 4 5 13 14 15 16 18 23 24 27 28 68 78 79
INTEGER_CONST (279) 64
CHAR_CONST (280) 65
STRING (281) 66


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
ext_def_list (46)
    on left: 2 3, on right: 1 2
ext_def (47)
    on left: 4 5 6 7 8, on right: 2
type_specifier (48)
    on left: 9 10 11, on right: 4 5 7 15 16 18 23 24 27 28 29
struct_specifier (49)
    on left: 13 14, on right: 11
$@1 (50)
    on left: 12, on right: 13
func_decl (51)
    on left: 15 16 18, on right: 6 8 30
@2 (52)
    on left: 17, on right: 18
pointers (53)
    on left: 19 20, on right: 4 5 15 16 18 23 24 27 28
param_list (54)
    on left: 21 22, on right: 18 22
param_decl (55)
    on left: 23 24, on right: 21 22
def_list (56)
    on left: 25 26, on right: 13 25 32
def (57)
    on left: 27 28 29 30, on right: 25
compound_stmt (58)
    on left: 31, on right: 8 36
local_defs (59)
    on left: 32, on right: 31
stmt_list (60)
    on left: 33 34, on right: 31 33
stmt (61)
    on left: 35 36 37 38 39 40 41 42 43 44 45, on right: 33 40 41 42
    43
expr_e (62)
    on left: 46 47, on right: 43
const_expr (63)
    on left: 48, on right: 5 24 28
expr (64)
    on left: 49 50, on right: 35 38 40 41 42 46 48 49 62 77 82 83
or_expr (65)
    on left: 51, on right: 50
or_list (66)
    on left: 52 53, on right: 51 52
and_expr (67)
    on left: 54, on right: 52 53
and_list (68)
    on left: 55 56, on right: 54 55
binary (69)
    on left: 57 58 59 60 61, on right: 55 56 57 58 59 60
unary (70)
    on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
    80 81, on right: 49 61 63 69 70 71 72 73 74 75 76 77 78 79 80 81
args (71)
    on left: 82 83, on right: 80 83


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

    9 type_specifier: TYPE .

    $default  reduce using rule 9 (type_specifier)


State 5

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 6

   13 struct_specifier: STRUCT . ID '{' $@1 def_list '}'
   14                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   18          | type_specifier . pointers ID '(' @2 param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 20 (pointers)

    pointers  go to state 14


State 9

   11 type_specifier: struct_specifier .

    $default  reduce using rule 11 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    8        | func_decl . compound_stmt

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16

    compound_stmt  go to state 17


State 11

   13 struct_specifier: STRUCT ID . '{' $@1 def_list '}'
   14                 | STRUCT ID .

    '{'  shift, and go to state 18

    $default  reduce using rule 14 (struct_specifier)


State 12

   19 pointers: '*' .

    $default  reduce using rule 19 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   18          | type_specifier pointers . ID '(' @2 param_list ')'

    ID  shift, and go to state 19


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

   31 compound_stmt: '{' . local_defs stmt_list '}'

    $default  reduce using rule 26 (def_list)

    def_list    go to state 20
    local_defs  go to state 21


State 17

    8 ext_def: func_decl compound_stmt .

    $default  reduce using rule 8 (ext_def)


State 18

   13 struct_specifier: STRUCT ID '{' . $@1 def_list '}'

    $default  reduce using rule 12 ($@1)

    $@1  go to state 22


State 19

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   18          | type_specifier pointers ID . '(' @2 param_list ')'

    '['  shift, and go to state 23
    '('  shift, and go to state 24
    ';'  shift, and go to state 25


State 20

   25 def_list: def_list . def
   32 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 32 (local_defs)

    type_specifier    go to state 26
    struct_specifier  go to state 9
    func_decl         go to state 27
    def               go to state 28


State 21

   31 compound_stmt: '{' local_defs . stmt_list '}'

    $default  reduce using rule 34 (stmt_list)

    stmt_list  go to state 29


State 22

   13 struct_specifier: STRUCT ID '{' $@1 . def_list '}'

    $default  reduce using rule 26 (def_list)

    def_list  go to state 30


State 23

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    const_expr  go to state 43
    expr        go to state 44
    or_expr     go to state 45
    or_list     go to state 46
    and_expr    go to state 47
    and_list    go to state 48
    binary      go to state 49
    unary       go to state 50


State 24

   15 func_decl: type_specifier pointers ID '(' . ')'
   16          | type_specifier pointers ID '(' . VOID ')'
   18          | type_specifier pointers ID '(' . @2 param_list ')'

    ')'   shift, and go to state 51
    VOID  shift, and go to state 52

    VOID      [reduce using rule 17 (@2)]
    $default  reduce using rule 17 (@2)

    @2  go to state 53


State 25

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 26

   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   18          | type_specifier . pointers ID '(' @2 param_list ')'
   27 def: type_specifier . pointers ID ';'
   28    | type_specifier . pointers ID '[' const_expr ']' ';'
   29    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 54

    $default  reduce using rule 20 (pointers)

    pointers  go to state 55


State 27

   30 def: func_decl . ';'

    ';'  shift, and go to state 56


State 28

   25 def_list: def_list def .

    $default  reduce using rule 25 (def_list)


State 29

   31 compound_stmt: '{' local_defs stmt_list . '}'
   33 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    ';'            shift, and go to state 63
    '{'            shift, and go to state 16
    '}'            shift, and go to state 64

    compound_stmt  go to state 65
    stmt           go to state 66
    expr           go to state 67
    or_expr        go to state 45
    or_list        go to state 46
    and_expr       go to state 47
    and_list       go to state 48
    binary         go to state 49
    unary          go to state 50


State 30

   13 struct_specifier: STRUCT ID '{' $@1 def_list . '}'
   25 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 68

    type_specifier    go to state 26
    struct_specifier  go to state 9
    func_decl         go to state 27
    def               go to state 28


State 31

   75 unary: '&' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    unary  go to state 69


State 32

   69 unary: '-' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    unary  go to state 70


State 33

   76 unary: '*' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    unary  go to state 71


State 34

   70 unary: '!' . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    unary  go to state 72


State 35

   73 unary: INCOP . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    unary  go to state 73


State 36

   74 unary: DECOP . unary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    unary  go to state 74


State 37

   62 unary: '(' . expr ')'
   63      | '(' . unary ')'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    expr      go to state 75
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 76


State 38

   67 unary: NULL_TOKEN .

    $default  reduce using rule 67 (unary)


State 39

   68 unary: ID .

    $default  reduce using rule 68 (unary)


State 40

   64 unary: INTEGER_CONST .

    $default  reduce using rule 64 (unary)


State 41

   65 unary: CHAR_CONST .

    $default  reduce using rule 65 (unary)


State 42

   66 unary: STRING .

    $default  reduce using rule 66 (unary)


State 43

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 77


State 44

   48 const_expr: expr .

    $default  reduce using rule 48 (const_expr)


State 45

   50 expr: or_expr .

    $default  reduce using rule 50 (expr)


State 46

   51 or_expr: or_list .
   52 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 78

    $default  reduce using rule 51 (or_expr)


State 47

   53 or_list: and_expr .

    $default  reduce using rule 53 (or_list)


State 48

   54 and_expr: and_list .
   55 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 79

    $default  reduce using rule 54 (and_expr)


State 49

   56 and_list: binary .
   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary

    EQUOP  shift, and go to state 80
    RELOP  shift, and go to state 81
    '+'    shift, and go to state 82
    '-'    shift, and go to state 83

    $default  reduce using rule 56 (and_list)


State 50

   49 expr: unary . '=' expr
   61 binary: unary .
   71 unary: unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    '='       shift, and go to state 84
    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 61 (binary)


State 51

   15 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 15 (func_decl)


State 52

   16 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 91


State 53

   18 func_decl: type_specifier pointers ID '(' @2 . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 92
    struct_specifier  go to state 9
    param_list        go to state 93
    param_decl        go to state 94


State 54

   29 def: type_specifier ';' .

    $default  reduce using rule 29 (def)


State 55

   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   18          | type_specifier pointers . ID '(' @2 param_list ')'
   27 def: type_specifier pointers . ID ';'
   28    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 95


State 56

   30 def: func_decl ';' .

    $default  reduce using rule 30 (def)


State 57

   37 stmt: RETURN . ';'
   38     | RETURN . expr ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    ';'            shift, and go to state 96

    expr      go to state 97
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 58

   40 stmt: IF . '(' expr ')' stmt
   41     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 98


State 59

   42 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 99


State 60

   43 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 100


State 61

   44 stmt: BREAK . ';'

    ';'  shift, and go to state 101


State 62

   45 stmt: CONTINUE . ';'

    ';'  shift, and go to state 102


State 63

   39 stmt: ';' .

    $default  reduce using rule 39 (stmt)


State 64

   31 compound_stmt: '{' local_defs stmt_list '}' .

    $default  reduce using rule 31 (compound_stmt)


State 65

   36 stmt: compound_stmt .

    $default  reduce using rule 36 (stmt)


State 66

   33 stmt_list: stmt_list stmt .

    $default  reduce using rule 33 (stmt_list)


State 67

   35 stmt: expr . ';'

    ';'  shift, and go to state 103


State 68

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}' .

    $default  reduce using rule 13 (struct_specifier)


State 69

   71 unary: unary . INCOP
   72      | unary . DECOP
   75      | '&' unary .
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 75 (unary)


State 70

   69 unary: '-' unary .
   71      | unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 69 (unary)


State 71

   71 unary: unary . INCOP
   72      | unary . DECOP
   76      | '*' unary .
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 76 (unary)


State 72

   70 unary: '!' unary .
   71      | unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 70 (unary)


State 73

   71 unary: unary . INCOP
   72      | unary . DECOP
   73      | INCOP unary .
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 73 (unary)


State 74

   71 unary: unary . INCOP
   72      | unary . DECOP
   74      | DECOP unary .
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 74 (unary)


State 75

   62 unary: '(' expr . ')'

    ')'  shift, and go to state 104


State 76

   49 expr: unary . '=' expr
   61 binary: unary .
   63 unary: '(' unary . ')'
   71      | unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    '='       shift, and go to state 84
    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    ')'       shift, and go to state 105
    '.'       shift, and go to state 90

    $default  reduce using rule 61 (binary)


State 77

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 106


State 78

   52 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    and_expr  go to state 107
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 108


State 79

   55 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    binary  go to state 109
    unary   go to state 108


State 80

   58 binary: binary EQUOP . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    binary  go to state 110
    unary   go to state 108


State 81

   57 binary: binary RELOP . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    binary  go to state 111
    unary   go to state 108


State 82

   59 binary: binary '+' . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    binary  go to state 112
    unary   go to state 108


State 83

   60 binary: binary '-' . binary

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    binary  go to state 113
    unary   go to state 108


State 84

   49 expr: unary '=' . expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    expr      go to state 114
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 85

   71 unary: unary INCOP .

    $default  reduce using rule 71 (unary)


State 86

   72 unary: unary DECOP .

    $default  reduce using rule 72 (unary)


State 87

   79 unary: unary STRUCTOP . ID

    ID  shift, and go to state 115


State 88

   77 unary: unary '[' . expr ']'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    expr      go to state 116
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 89

   80 unary: unary '(' . args ')'
   81      | unary '(' . ')'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    ')'            shift, and go to state 117
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    expr      go to state 118
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50
    args      go to state 119


State 90

   78 unary: unary '.' . ID

    ID  shift, and go to state 120


State 91

   16 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 16 (func_decl)


State 92

   23 param_decl: type_specifier . pointers ID
   24           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 20 (pointers)

    pointers  go to state 121


State 93

   18 func_decl: type_specifier pointers ID '(' @2 param_list . ')'
   22 param_list: param_list . ',' param_decl

    ','  shift, and go to state 122
    ')'  shift, and go to state 123


State 94

   21 param_list: param_decl .

    $default  reduce using rule 21 (param_list)


State 95

   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   18          | type_specifier pointers ID . '(' @2 param_list ')'
   27 def: type_specifier pointers ID . ';'
   28    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 124
    '('  shift, and go to state 24
    ';'  shift, and go to state 125


State 96

   37 stmt: RETURN ';' .

    $default  reduce using rule 37 (stmt)


State 97

   38 stmt: RETURN expr . ';'

    ';'  shift, and go to state 126


State 98

   40 stmt: IF '(' . expr ')' stmt
   41     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    expr      go to state 127
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 99

   42 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    expr      go to state 128
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 100

   43 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    $default  reduce using rule 47 (expr_e)

    expr_e    go to state 129
    expr      go to state 130
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 101

   44 stmt: BREAK ';' .

    $default  reduce using rule 44 (stmt)


State 102

   45 stmt: CONTINUE ';' .

    $default  reduce using rule 45 (stmt)


State 103

   35 stmt: expr ';' .

    $default  reduce using rule 35 (stmt)


State 104

   62 unary: '(' expr ')' .

    $default  reduce using rule 62 (unary)


State 105

   63 unary: '(' unary ')' .

    $default  reduce using rule 63 (unary)


State 106

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 107

   52 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 52 (or_list)


State 108

   61 binary: unary .
   71 unary: unary . INCOP
   72      | unary . DECOP
   77      | unary . '[' expr ']'
   78      | unary . '.' ID
   79      | unary . STRUCTOP ID
   80      | unary . '(' args ')'
   81      | unary . '(' ')'

    INCOP     shift, and go to state 85
    DECOP     shift, and go to state 86
    STRUCTOP  shift, and go to state 87
    '['       shift, and go to state 88
    '('       shift, and go to state 89
    '.'       shift, and go to state 90

    $default  reduce using rule 61 (binary)


State 109

   55 and_list: and_list LOGICAL_AND binary .
   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary

    EQUOP  shift, and go to state 80
    RELOP  shift, and go to state 81
    '+'    shift, and go to state 82
    '-'    shift, and go to state 83

    $default  reduce using rule 55 (and_list)


State 110

   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   58       | binary EQUOP binary .
   59       | binary . '+' binary
   60       | binary . '-' binary

    RELOP  shift, and go to state 81
    '+'    shift, and go to state 82
    '-'    shift, and go to state 83

    $default  reduce using rule 58 (binary)


State 111

   57 binary: binary . RELOP binary
   57       | binary RELOP binary .
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary

    '+'  shift, and go to state 82
    '-'  shift, and go to state 83

    $default  reduce using rule 57 (binary)


State 112

   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   59       | binary '+' binary .
   60       | binary . '-' binary

    $default  reduce using rule 59 (binary)


State 113

   57 binary: binary . RELOP binary
   58       | binary . EQUOP binary
   59       | binary . '+' binary
   60       | binary . '-' binary
   60       | binary '-' binary .

    $default  reduce using rule 60 (binary)


State 114

   49 expr: unary '=' expr .

    $default  reduce using rule 49 (expr)


State 115

   79 unary: unary STRUCTOP ID .

    $default  reduce using rule 79 (unary)


State 116

   77 unary: unary '[' expr . ']'

    ']'  shift, and go to state 131


State 117

   81 unary: unary '(' ')' .

    $default  reduce using rule 81 (unary)


State 118

   82 args: expr .

    $default  reduce using rule 82 (args)


State 119

   80 unary: unary '(' args . ')'
   83 args: args . ',' expr

    ','  shift, and go to state 132
    ')'  shift, and go to state 133


State 120

   78 unary: unary '.' ID .

    $default  reduce using rule 78 (unary)


State 121

   23 param_decl: type_specifier pointers . ID
   24           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 134


State 122

   22 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 92
    struct_specifier  go to state 9
    param_decl        go to state 135


State 123

   18 func_decl: type_specifier pointers ID '(' @2 param_list ')' .

    $default  reduce using rule 18 (func_decl)


State 124

   28 def: type_specifier pointers ID '[' . const_expr ']' ';'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    const_expr  go to state 136
    expr        go to state 44
    or_expr     go to state 45
    or_list     go to state 46
    and_expr    go to state 47
    and_list    go to state 48
    binary      go to state 49
    unary       go to state 50


State 125

   27 def: type_specifier pointers ID ';' .

    $default  reduce using rule 27 (def)


State 126

   38 stmt: RETURN expr ';' .

    $default  reduce using rule 38 (stmt)


State 127

   40 stmt: IF '(' expr . ')' stmt
   41     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 137


State 128

   42 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 138


State 129

   43 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 139


State 130

   46 expr_e: expr .

    $default  reduce using rule 46 (expr_e)


State 131

   77 unary: unary '[' expr ']' .

    $default  reduce using rule 77 (unary)


State 132

   83 args: args ',' . expr

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    expr      go to state 140
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 133

   80 unary: unary '(' args ')' .

    $default  reduce using rule 80 (unary)


State 134

   23 param_decl: type_specifier pointers ID .
   24           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 141

    $default  reduce using rule 23 (param_decl)


State 135

   22 param_list: param_list ',' param_decl .

    $default  reduce using rule 22 (param_list)


State 136

   28 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 142


State 137

   40 stmt: IF '(' expr ')' . stmt
   41     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    ';'            shift, and go to state 63
    '{'            shift, and go to state 16

    compound_stmt  go to state 65
    stmt           go to state 143
    expr           go to state 67
    or_expr        go to state 45
    or_list        go to state 46
    and_expr       go to state 47
    and_list       go to state 48
    binary         go to state 49
    unary          go to state 50


State 138

   42 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    ';'            shift, and go to state 63
    '{'            shift, and go to state 16

    compound_stmt  go to state 65
    stmt           go to state 144
    expr           go to state 67
    or_expr        go to state 45
    or_list        go to state 46
    and_expr       go to state 47
    and_list       go to state 48
    binary         go to state 49
    unary          go to state 50


State 139

   43 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    $default  reduce using rule 47 (expr_e)

    expr_e    go to state 145
    expr      go to state 130
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 140

   83 args: args ',' expr .

    $default  reduce using rule 83 (args)


State 141

   24 param_decl: type_specifier pointers ID '[' . const_expr ']'

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    const_expr  go to state 146
    expr        go to state 44
    or_expr     go to state 45
    or_list     go to state 46
    and_expr    go to state 47
    and_list    go to state 48
    binary      go to state 49
    unary       go to state 50


State 142

   28 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 147


State 143

   40 stmt: IF '(' expr ')' stmt .
   41     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 148

    ELSE      [reduce using rule 40 (stmt)]
    $default  reduce using rule 40 (stmt)


State 144

   42 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 42 (stmt)


State 145

   43 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 149


State 146

   24 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 150


State 147

   28 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 28 (def)


State 148

   41 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    ';'            shift, and go to state 63
    '{'            shift, and go to state 16

    compound_stmt  go to state 65
    stmt           go to state 151
    expr           go to state 67
    or_expr        go to state 45
    or_list        go to state 46
    and_expr       go to state 47
    and_list       go to state 48
    binary         go to state 49
    unary          go to state 50


State 149

   43 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42

    $default  reduce using rule 47 (expr_e)

    expr_e    go to state 152
    expr      go to state 130
    or_expr   go to state 45
    or_list   go to state 46
    and_expr  go to state 47
    and_list  go to state 48
    binary    go to state 49
    unary     go to state 50


State 150

   24 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 24 (param_decl)


State 151

   41 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 41 (stmt)


State 152

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 153


State 153

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 31
    '-'            shift, and go to state 32
    '*'            shift, and go to state 33
    '!'            shift, and go to state 34
    INCOP          shift, and go to state 35
    DECOP          shift, and go to state 36
    '('            shift, and go to state 37
    NULL_TOKEN     shift, and go to state 38
    RETURN         shift, and go to state 57
    IF             shift, and go to state 58
    WHILE          shift, and go to state 59
    FOR            shift, and go to state 60
    BREAK          shift, and go to state 61
    CONTINUE       shift, and go to state 62
    ID             shift, and go to state 39
    INTEGER_CONST  shift, and go to state 40
    CHAR_CONST     shift, and go to state 41
    STRING         shift, and go to state 42
    ';'            shift, and go to state 63
    '{'            shift, and go to state 16

    compound_stmt  go to state 65
    stmt           go to state 154
    expr           go to state 67
    or_expr        go to state 45
    or_list        go to state 46
    and_expr       go to state 47
    and_list       go to state 48
    binary         go to state 49
    unary          go to state 50


State 154

   43 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 43 (stmt)
