Terminals unused in grammar

   ASSIGNOP
   '/'
   '%'


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl func_compound_stmt

    9 type_specifier: TYPE
   10               | VOID
   11               | struct_specifier

   12 $@1: %empty

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}'
   14                 | STRUCT ID

   15 @2: %empty

   16 func_decl: type_specifier pointers ID '(' @2 ')'

   17 @3: %empty

   18 func_decl: type_specifier pointers ID '(' @3 VOID ')'

   19 @4: %empty

   20 func_decl: type_specifier pointers ID '(' @4 param_list ')'

   21 pointers: '*'
   22         | %empty

   23 param_list: param_decl
   24           | param_list ',' param_decl

   25 param_type_specifier: TYPE
   26                     | struct_specifier

   27 param_decl: param_type_specifier pointers ID
   28           | param_type_specifier pointers ID '[' const_expr ']'

   29 def_list: def_list def
   30         | %empty

   31 def: type_specifier pointers ID ';'
   32    | type_specifier pointers ID '[' const_expr ']' ';'
   33    | type_specifier ';'
   34    | func_decl ';'

   35 $@5: %empty

   36 func_compound_stmt: '{' local_defs $@5 stmt_list '}'

   37 compound_stmt: '{' local_defs stmt_list '}'

   38 local_defs: def_list

   39 stmt_list: stmt_list stmt
   40          | %empty

   41 stmt: expr ';'

   42 $@6: %empty

   43 stmt: $@6 compound_stmt
   44     | RETURN ';'

   45 $@7: %empty

   46 stmt: RETURN $@7 expr ';'
   47     | ';'
   48     | before_if IF '(' expr ')' after_if stmt

   49 @8: %empty

   50 stmt: before_if IF '(' expr ')' after_if stmt ELSE @8 stmt

   51 @9: %empty

   52 @10: %empty

   53 $@11: %empty

   54 stmt: @9 WHILE @10 '(' expr ')' $@11 stmt

   55 $@12: %empty

   56 $@13: %empty

   57 $@14: %empty

   58 $@15: %empty

   59 stmt: FOR $@12 '(' expr_e ';' $@13 expr_e ';' $@14 expr_e ')' $@15 stmt
   60     | BREAK ';'
   61     | CONTINUE ';'
   62     | WRITE_INT '(' expr ')'
   63     | WRITE_CHAR '(' expr ')'
   64     | WRITE_STRING '(' expr ')'

   65 before_if: %empty

   66 after_if: %empty

   67 expr_e: expr
   68       | %empty

   69 const_expr: INTEGER_CONST

   70 $@16: %empty

   71 expr: unary $@16 '=' expr
   72     | or_expr

   73 or_expr: or_list

   74 or_list: or_list LOGICAL_OR and_expr
   75        | and_expr

   76 and_expr: and_list

   77 and_list: and_list LOGICAL_AND binary
   78         | binary

   79 binary: binary RELOP binary
   80       | binary EQUOP binary
   81       | binary '+' binary
   82       | binary '-' binary
   83       | unary

   84 unary: '(' expr ')'
   85      | '(' unary ')'
   86      | INTEGER_CONST
   87      | CHAR_CONST
   88      | STRING
   89      | NULL_TOKEN
   90      | ID
   91      | '-' unary
   92      | '!' unary
   93      | unary INCOP
   94      | unary DECOP
   95      | INCOP unary
   96      | DECOP unary
   97      | '&' unary
   98      | '*' unary
   99      | unary '[' expr ']'
  100      | unary '.' ID
  101      | unary STRUCTOP ID
  102      | unary '(' while_func_call args ')'
  103      | unary '(' while_func_call ')'

  104 while_func_call: %empty

  105 args: expr
  106     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 92
'%' (37)
'&' (38) 97
'(' (40) 16 18 20 48 50 54 59 62 63 64 84 85 102 103
')' (41) 16 18 20 48 50 54 59 62 63 64 84 85 102 103
'*' (42) 21 98
'+' (43) 81
',' (44) 24 106
'-' (45) 82 91
'.' (46) 100
'/' (47)
';' (59) 4 5 6 7 31 32 33 34 41 44 46 47 59 60 61
'=' (61) 71
'[' (91) 5 28 32 99
']' (93) 5 28 32 99
'{' (123) 13 36 37
'}' (125) 13 36 37
error (256)
ASSIGNOP (258)
LOGICAL_OR (259) 74
LOGICAL_AND (260) 77
EQUOP (261) 80
RELOP (262) 79
INCOP (263) 93 95
DECOP (264) 94 96
STRUCTOP (265) 101
TYPE (266) 9 25
VOID (267) 10 18
NULL_TOKEN (268) 89
WRITE_INT (269) 62
WRITE_CHAR (270) 63
WRITE_STRING (271) 64
STRUCT (272) 13 14
RETURN (273) 44 46
WHILE (274) 54
FOR (275) 59
BREAK (276) 60
CONTINUE (277) 61
IF (278) 48 50
ELSE (279) 50
ID (280) 4 5 13 14 16 18 20 27 28 31 32 90 100 101
INTEGER_CONST (281) 69 86
CHAR_CONST (282) 87
STRING (283) 88


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
ext_def_list (48)
    on left: 2 3, on right: 1 2
ext_def (49)
    on left: 4 5 6 7 8, on right: 2
type_specifier (50)
    on left: 9 10 11, on right: 4 5 7 16 18 20 31 32 33
struct_specifier (51)
    on left: 13 14, on right: 11 26
$@1 (52)
    on left: 12, on right: 13
func_decl (53)
    on left: 16 18 20, on right: 6 8 34
@2 (54)
    on left: 15, on right: 16
@3 (55)
    on left: 17, on right: 18
@4 (56)
    on left: 19, on right: 20
pointers (57)
    on left: 21 22, on right: 4 5 16 18 20 27 28 31 32
param_list (58)
    on left: 23 24, on right: 20 24
param_type_specifier (59)
    on left: 25 26, on right: 27 28
param_decl (60)
    on left: 27 28, on right: 23 24
def_list (61)
    on left: 29 30, on right: 13 29 38
def (62)
    on left: 31 32 33 34, on right: 29
func_compound_stmt (63)
    on left: 36, on right: 8
$@5 (64)
    on left: 35, on right: 36
compound_stmt (65)
    on left: 37, on right: 43
local_defs (66)
    on left: 38, on right: 36 37
stmt_list (67)
    on left: 39 40, on right: 36 37 39
stmt (68)
    on left: 41 43 44 46 47 48 50 54 59 60 61 62 63 64, on right: 39
    48 50 54 59
$@6 (69)
    on left: 42, on right: 43
$@7 (70)
    on left: 45, on right: 46
@8 (71)
    on left: 49, on right: 50
@9 (72)
    on left: 51, on right: 54
@10 (73)
    on left: 52, on right: 54
$@11 (74)
    on left: 53, on right: 54
$@12 (75)
    on left: 55, on right: 59
$@13 (76)
    on left: 56, on right: 59
$@14 (77)
    on left: 57, on right: 59
$@15 (78)
    on left: 58, on right: 59
before_if (79)
    on left: 65, on right: 48 50
after_if (80)
    on left: 66, on right: 48 50
expr_e (81)
    on left: 67 68, on right: 59
const_expr (82)
    on left: 69, on right: 5 28 32
expr (83)
    on left: 71 72, on right: 41 46 48 50 54 62 63 64 67 71 84 99 105
    106
$@16 (84)
    on left: 70, on right: 71
or_expr (85)
    on left: 73, on right: 72
or_list (86)
    on left: 74 75, on right: 73 74
and_expr (87)
    on left: 76, on right: 74 75
and_list (88)
    on left: 77 78, on right: 76 77
binary (89)
    on left: 79 80 81 82 83, on right: 77 78 79 80 81 82
unary (90)
    on left: 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101
    102 103, on right: 71 83 85 91 92 93 94 95 96 97 98 99 100 101
    102 103
while_func_call (91)
    on left: 104, on right: 102 103
args (92)
    on left: 105 106, on right: 102 106


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

    9 type_specifier: TYPE .

    $default  reduce using rule 9 (type_specifier)


State 5

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 6

   13 struct_specifier: STRUCT . ID '{' $@1 def_list '}'
   14                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   16 func_decl: type_specifier . pointers ID '(' @2 ')'
   18          | type_specifier . pointers ID '(' @3 VOID ')'
   20          | type_specifier . pointers ID '(' @4 param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 22 (pointers)

    pointers  go to state 14


State 9

   11 type_specifier: struct_specifier .

    $default  reduce using rule 11 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    8        | func_decl . func_compound_stmt

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16

    func_compound_stmt  go to state 17


State 11

   13 struct_specifier: STRUCT ID . '{' $@1 def_list '}'
   14                 | STRUCT ID .

    '{'  shift, and go to state 18

    $default  reduce using rule 14 (struct_specifier)


State 12

   21 pointers: '*' .

    $default  reduce using rule 21 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   16 func_decl: type_specifier pointers . ID '(' @2 ')'
   18          | type_specifier pointers . ID '(' @3 VOID ')'
   20          | type_specifier pointers . ID '(' @4 param_list ')'

    ID  shift, and go to state 19


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

   36 func_compound_stmt: '{' . local_defs $@5 stmt_list '}'

    $default  reduce using rule 30 (def_list)

    def_list    go to state 20
    local_defs  go to state 21


State 17

    8 ext_def: func_decl func_compound_stmt .

    $default  reduce using rule 8 (ext_def)


State 18

   13 struct_specifier: STRUCT ID '{' . $@1 def_list '}'

    $default  reduce using rule 12 ($@1)

    $@1  go to state 22


State 19

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   16 func_decl: type_specifier pointers ID . '(' @2 ')'
   18          | type_specifier pointers ID . '(' @3 VOID ')'
   20          | type_specifier pointers ID . '(' @4 param_list ')'

    '['  shift, and go to state 23
    '('  shift, and go to state 24
    ';'  shift, and go to state 25


State 20

   29 def_list: def_list . def
   38 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 38 (local_defs)

    type_specifier    go to state 26
    struct_specifier  go to state 9
    func_decl         go to state 27
    def               go to state 28


State 21

   36 func_compound_stmt: '{' local_defs . $@5 stmt_list '}'

    $default  reduce using rule 35 ($@5)

    $@5  go to state 29


State 22

   13 struct_specifier: STRUCT ID '{' $@1 . def_list '}'

    $default  reduce using rule 30 (def_list)

    def_list  go to state 30


State 23

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    INTEGER_CONST  shift, and go to state 31

    const_expr  go to state 32


State 24

   16 func_decl: type_specifier pointers ID '(' . @2 ')'
   18          | type_specifier pointers ID '(' . @3 VOID ')'
   20          | type_specifier pointers ID '(' . @4 param_list ')'

    ')'       reduce using rule 15 (@2)
    VOID      reduce using rule 17 (@3)
    $default  reduce using rule 19 (@4)

    @2  go to state 33
    @3  go to state 34
    @4  go to state 35


State 25

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 26

   16 func_decl: type_specifier . pointers ID '(' @2 ')'
   18          | type_specifier . pointers ID '(' @3 VOID ')'
   20          | type_specifier . pointers ID '(' @4 param_list ')'
   31 def: type_specifier . pointers ID ';'
   32    | type_specifier . pointers ID '[' const_expr ']' ';'
   33    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 36

    $default  reduce using rule 22 (pointers)

    pointers  go to state 37


State 27

   34 def: func_decl . ';'

    ';'  shift, and go to state 38


State 28

   29 def_list: def_list def .

    $default  reduce using rule 29 (def_list)


State 29

   36 func_compound_stmt: '{' local_defs $@5 . stmt_list '}'

    $default  reduce using rule 40 (stmt_list)

    stmt_list  go to state 39


State 30

   13 struct_specifier: STRUCT ID '{' $@1 def_list . '}'
   29 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 40

    type_specifier    go to state 26
    struct_specifier  go to state 9
    func_decl         go to state 27
    def               go to state 28


State 31

   69 const_expr: INTEGER_CONST .

    $default  reduce using rule 69 (const_expr)


State 32

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 41


State 33

   16 func_decl: type_specifier pointers ID '(' @2 . ')'

    ')'  shift, and go to state 42


State 34

   18 func_decl: type_specifier pointers ID '(' @3 . VOID ')'

    VOID  shift, and go to state 43


State 35

   20 func_decl: type_specifier pointers ID '(' @4 . param_list ')'

    TYPE    shift, and go to state 44
    STRUCT  shift, and go to state 6

    struct_specifier      go to state 45
    param_list            go to state 46
    param_type_specifier  go to state 47
    param_decl            go to state 48


State 36

   33 def: type_specifier ';' .

    $default  reduce using rule 33 (def)


State 37

   16 func_decl: type_specifier pointers . ID '(' @2 ')'
   18          | type_specifier pointers . ID '(' @3 VOID ')'
   20          | type_specifier pointers . ID '(' @4 param_list ')'
   31 def: type_specifier pointers . ID ';'
   32    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 49


State 38

   34 def: func_decl ';' .

    $default  reduce using rule 34 (def)


State 39

   36 func_compound_stmt: '{' local_defs $@5 stmt_list . '}'
   39 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    WRITE_INT      shift, and go to state 58
    WRITE_CHAR     shift, and go to state 59
    WRITE_STRING   shift, and go to state 60
    RETURN         shift, and go to state 61
    FOR            shift, and go to state 62
    BREAK          shift, and go to state 63
    CONTINUE       shift, and go to state 64
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68
    ';'            shift, and go to state 69
    '}'            shift, and go to state 70

    WHILE     reduce using rule 51 (@9)
    IF        reduce using rule 65 (before_if)
    $default  reduce using rule 42 ($@6)

    stmt       go to state 71
    $@6        go to state 72
    @9         go to state 73
    before_if  go to state 74
    expr       go to state 75
    or_expr    go to state 76
    or_list    go to state 77
    and_expr   go to state 78
    and_list   go to state 79
    binary     go to state 80
    unary      go to state 81


State 40

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}' .

    $default  reduce using rule 13 (struct_specifier)


State 41

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 82


State 42

   16 func_decl: type_specifier pointers ID '(' @2 ')' .

    $default  reduce using rule 16 (func_decl)


State 43

   18 func_decl: type_specifier pointers ID '(' @3 VOID . ')'

    ')'  shift, and go to state 83


State 44

   25 param_type_specifier: TYPE .

    $default  reduce using rule 25 (param_type_specifier)


State 45

   26 param_type_specifier: struct_specifier .

    $default  reduce using rule 26 (param_type_specifier)


State 46

   20 func_decl: type_specifier pointers ID '(' @4 param_list . ')'
   24 param_list: param_list . ',' param_decl

    ','  shift, and go to state 84
    ')'  shift, and go to state 85


State 47

   27 param_decl: param_type_specifier . pointers ID
   28           | param_type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 22 (pointers)

    pointers  go to state 86


State 48

   23 param_list: param_decl .

    $default  reduce using rule 23 (param_list)


State 49

   16 func_decl: type_specifier pointers ID . '(' @2 ')'
   18          | type_specifier pointers ID . '(' @3 VOID ')'
   20          | type_specifier pointers ID . '(' @4 param_list ')'
   31 def: type_specifier pointers ID . ';'
   32    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 87
    '('  shift, and go to state 24
    ';'  shift, and go to state 88


State 50

   97 unary: '&' . unary

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    unary  go to state 89


State 51

   91 unary: '-' . unary

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    unary  go to state 90


State 52

   98 unary: '*' . unary

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    unary  go to state 91


State 53

   92 unary: '!' . unary

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    unary  go to state 92


State 54

   95 unary: INCOP . unary

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    unary  go to state 93


State 55

   96 unary: DECOP . unary

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    unary  go to state 94


State 56

   84 unary: '(' . expr ')'
   85      | '(' . unary ')'

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    expr      go to state 95
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 96


State 57

   89 unary: NULL_TOKEN .

    $default  reduce using rule 89 (unary)


State 58

   62 stmt: WRITE_INT . '(' expr ')'

    '('  shift, and go to state 97


State 59

   63 stmt: WRITE_CHAR . '(' expr ')'

    '('  shift, and go to state 98


State 60

   64 stmt: WRITE_STRING . '(' expr ')'

    '('  shift, and go to state 99


State 61

   44 stmt: RETURN . ';'
   46     | RETURN . $@7 expr ';'

    ';'  shift, and go to state 100

    $default  reduce using rule 45 ($@7)

    $@7  go to state 101


State 62

   59 stmt: FOR . $@12 '(' expr_e ';' $@13 expr_e ';' $@14 expr_e ')' $@15 stmt

    $default  reduce using rule 55 ($@12)

    $@12  go to state 102


State 63

   60 stmt: BREAK . ';'

    ';'  shift, and go to state 103


State 64

   61 stmt: CONTINUE . ';'

    ';'  shift, and go to state 104


State 65

   90 unary: ID .

    $default  reduce using rule 90 (unary)


State 66

   86 unary: INTEGER_CONST .

    $default  reduce using rule 86 (unary)


State 67

   87 unary: CHAR_CONST .

    $default  reduce using rule 87 (unary)


State 68

   88 unary: STRING .

    $default  reduce using rule 88 (unary)


State 69

   47 stmt: ';' .

    $default  reduce using rule 47 (stmt)


State 70

   36 func_compound_stmt: '{' local_defs $@5 stmt_list '}' .

    $default  reduce using rule 36 (func_compound_stmt)


State 71

   39 stmt_list: stmt_list stmt .

    $default  reduce using rule 39 (stmt_list)


State 72

   43 stmt: $@6 . compound_stmt

    '{'  shift, and go to state 105

    compound_stmt  go to state 106


State 73

   54 stmt: @9 . WHILE @10 '(' expr ')' $@11 stmt

    WHILE  shift, and go to state 107


State 74

   48 stmt: before_if . IF '(' expr ')' after_if stmt
   50     | before_if . IF '(' expr ')' after_if stmt ELSE @8 stmt

    IF  shift, and go to state 108


State 75

   41 stmt: expr . ';'

    ';'  shift, and go to state 109


State 76

   72 expr: or_expr .

    $default  reduce using rule 72 (expr)


State 77

   73 or_expr: or_list .
   74 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 110

    $default  reduce using rule 73 (or_expr)


State 78

   75 or_list: and_expr .

    $default  reduce using rule 75 (or_list)


State 79

   76 and_expr: and_list .
   77 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 111

    $default  reduce using rule 76 (and_expr)


State 80

   78 and_list: binary .
   79 binary: binary . RELOP binary
   80       | binary . EQUOP binary
   81       | binary . '+' binary
   82       | binary . '-' binary

    EQUOP  shift, and go to state 112
    RELOP  shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115

    $default  reduce using rule 78 (and_list)


State 81

   71 expr: unary . $@16 '=' expr
   83 binary: unary .
   93 unary: unary . INCOP
   94      | unary . DECOP
   99      | unary . '[' expr ']'
  100      | unary . '.' ID
  101      | unary . STRUCTOP ID
  102      | unary . '(' while_func_call args ')'
  103      | unary . '(' while_func_call ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 119
    '('       shift, and go to state 120
    '.'       shift, and go to state 121

    '='       reduce using rule 70 ($@16)
    $default  reduce using rule 83 (binary)

    $@16  go to state 122


State 82

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 83

   18 func_decl: type_specifier pointers ID '(' @3 VOID ')' .

    $default  reduce using rule 18 (func_decl)


State 84

   24 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 44
    STRUCT  shift, and go to state 6

    struct_specifier      go to state 45
    param_type_specifier  go to state 47
    param_decl            go to state 123


State 85

   20 func_decl: type_specifier pointers ID '(' @4 param_list ')' .

    $default  reduce using rule 20 (func_decl)


State 86

   27 param_decl: param_type_specifier pointers . ID
   28           | param_type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 124


State 87

   32 def: type_specifier pointers ID '[' . const_expr ']' ';'

    INTEGER_CONST  shift, and go to state 31

    const_expr  go to state 125


State 88

   31 def: type_specifier pointers ID ';' .

    $default  reduce using rule 31 (def)


State 89

   93 unary: unary . INCOP
   94      | unary . DECOP
   97      | '&' unary .
   99      | unary . '[' expr ']'
  100      | unary . '.' ID
  101      | unary . STRUCTOP ID
  102      | unary . '(' while_func_call args ')'
  103      | unary . '(' while_func_call ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 119
    '('       shift, and go to state 120
    '.'       shift, and go to state 121

    $default  reduce using rule 97 (unary)


State 90

   91 unary: '-' unary .
   93      | unary . INCOP
   94      | unary . DECOP
   99      | unary . '[' expr ']'
  100      | unary . '.' ID
  101      | unary . STRUCTOP ID
  102      | unary . '(' while_func_call args ')'
  103      | unary . '(' while_func_call ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 119
    '('       shift, and go to state 120
    '.'       shift, and go to state 121

    $default  reduce using rule 91 (unary)


State 91

   93 unary: unary . INCOP
   94      | unary . DECOP
   98      | '*' unary .
   99      | unary . '[' expr ']'
  100      | unary . '.' ID
  101      | unary . STRUCTOP ID
  102      | unary . '(' while_func_call args ')'
  103      | unary . '(' while_func_call ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 119
    '('       shift, and go to state 120
    '.'       shift, and go to state 121

    $default  reduce using rule 98 (unary)


State 92

   92 unary: '!' unary .
   93      | unary . INCOP
   94      | unary . DECOP
   99      | unary . '[' expr ']'
  100      | unary . '.' ID
  101      | unary . STRUCTOP ID
  102      | unary . '(' while_func_call args ')'
  103      | unary . '(' while_func_call ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 119
    '('       shift, and go to state 120
    '.'       shift, and go to state 121

    $default  reduce using rule 92 (unary)


State 93

   93 unary: unary . INCOP
   94      | unary . DECOP
   95      | INCOP unary .
   99      | unary . '[' expr ']'
  100      | unary . '.' ID
  101      | unary . STRUCTOP ID
  102      | unary . '(' while_func_call args ')'
  103      | unary . '(' while_func_call ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 119
    '('       shift, and go to state 120
    '.'       shift, and go to state 121

    $default  reduce using rule 95 (unary)


State 94

   93 unary: unary . INCOP
   94      | unary . DECOP
   96      | DECOP unary .
   99      | unary . '[' expr ']'
  100      | unary . '.' ID
  101      | unary . STRUCTOP ID
  102      | unary . '(' while_func_call args ')'
  103      | unary . '(' while_func_call ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 119
    '('       shift, and go to state 120
    '.'       shift, and go to state 121

    $default  reduce using rule 96 (unary)


State 95

   84 unary: '(' expr . ')'

    ')'  shift, and go to state 126


State 96

   71 expr: unary . $@16 '=' expr
   83 binary: unary .
   85 unary: '(' unary . ')'
   93      | unary . INCOP
   94      | unary . DECOP
   99      | unary . '[' expr ']'
  100      | unary . '.' ID
  101      | unary . STRUCTOP ID
  102      | unary . '(' while_func_call args ')'
  103      | unary . '(' while_func_call ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 119
    '('       shift, and go to state 120
    ')'       shift, and go to state 127
    '.'       shift, and go to state 121

    '='       reduce using rule 70 ($@16)
    $default  reduce using rule 83 (binary)

    $@16  go to state 122


State 97

   62 stmt: WRITE_INT '(' . expr ')'

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    expr      go to state 128
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 98

   63 stmt: WRITE_CHAR '(' . expr ')'

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    expr      go to state 129
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 99

   64 stmt: WRITE_STRING '(' . expr ')'

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    expr      go to state 130
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 100

   44 stmt: RETURN ';' .

    $default  reduce using rule 44 (stmt)


State 101

   46 stmt: RETURN $@7 . expr ';'

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    expr      go to state 131
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 102

   59 stmt: FOR $@12 . '(' expr_e ';' $@13 expr_e ';' $@14 expr_e ')' $@15 stmt

    '('  shift, and go to state 132


State 103

   60 stmt: BREAK ';' .

    $default  reduce using rule 60 (stmt)


State 104

   61 stmt: CONTINUE ';' .

    $default  reduce using rule 61 (stmt)


State 105

   37 compound_stmt: '{' . local_defs stmt_list '}'

    $default  reduce using rule 30 (def_list)

    def_list    go to state 20
    local_defs  go to state 133


State 106

   43 stmt: $@6 compound_stmt .

    $default  reduce using rule 43 (stmt)


State 107

   54 stmt: @9 WHILE . @10 '(' expr ')' $@11 stmt

    $default  reduce using rule 52 (@10)

    @10  go to state 134


State 108

   48 stmt: before_if IF . '(' expr ')' after_if stmt
   50     | before_if IF . '(' expr ')' after_if stmt ELSE @8 stmt

    '('  shift, and go to state 135


State 109

   41 stmt: expr ';' .

    $default  reduce using rule 41 (stmt)


State 110

   74 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    and_expr  go to state 136
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 137


State 111

   77 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    binary  go to state 138
    unary   go to state 137


State 112

   80 binary: binary EQUOP . binary

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    binary  go to state 139
    unary   go to state 137


State 113

   79 binary: binary RELOP . binary

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    binary  go to state 140
    unary   go to state 137


State 114

   81 binary: binary '+' . binary

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    binary  go to state 141
    unary   go to state 137


State 115

   82 binary: binary '-' . binary

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    binary  go to state 142
    unary   go to state 137


State 116

   93 unary: unary INCOP .

    $default  reduce using rule 93 (unary)


State 117

   94 unary: unary DECOP .

    $default  reduce using rule 94 (unary)


State 118

  101 unary: unary STRUCTOP . ID

    ID  shift, and go to state 143


State 119

   99 unary: unary '[' . expr ']'

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    expr      go to state 144
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 120

  102 unary: unary '(' . while_func_call args ')'
  103      | unary '(' . while_func_call ')'

    $default  reduce using rule 104 (while_func_call)

    while_func_call  go to state 145


State 121

  100 unary: unary '.' . ID

    ID  shift, and go to state 146


State 122

   71 expr: unary $@16 . '=' expr

    '='  shift, and go to state 147


State 123

   24 param_list: param_list ',' param_decl .

    $default  reduce using rule 24 (param_list)


State 124

   27 param_decl: param_type_specifier pointers ID .
   28           | param_type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 148

    $default  reduce using rule 27 (param_decl)


State 125

   32 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 149


State 126

   84 unary: '(' expr ')' .

    $default  reduce using rule 84 (unary)


State 127

   85 unary: '(' unary ')' .

    $default  reduce using rule 85 (unary)


State 128

   62 stmt: WRITE_INT '(' expr . ')'

    ')'  shift, and go to state 150


State 129

   63 stmt: WRITE_CHAR '(' expr . ')'

    ')'  shift, and go to state 151


State 130

   64 stmt: WRITE_STRING '(' expr . ')'

    ')'  shift, and go to state 152


State 131

   46 stmt: RETURN $@7 expr . ';'

    ';'  shift, and go to state 153


State 132

   59 stmt: FOR $@12 '(' . expr_e ';' $@13 expr_e ';' $@14 expr_e ')' $@15 stmt

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    $default  reduce using rule 68 (expr_e)

    expr_e    go to state 154
    expr      go to state 155
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 133

   37 compound_stmt: '{' local_defs . stmt_list '}'

    $default  reduce using rule 40 (stmt_list)

    stmt_list  go to state 156


State 134

   54 stmt: @9 WHILE @10 . '(' expr ')' $@11 stmt

    '('  shift, and go to state 157


State 135

   48 stmt: before_if IF '(' . expr ')' after_if stmt
   50     | before_if IF '(' . expr ')' after_if stmt ELSE @8 stmt

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    expr      go to state 158
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 136

   74 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 74 (or_list)


State 137

   83 binary: unary .
   93 unary: unary . INCOP
   94      | unary . DECOP
   99      | unary . '[' expr ']'
  100      | unary . '.' ID
  101      | unary . STRUCTOP ID
  102      | unary . '(' while_func_call args ')'
  103      | unary . '(' while_func_call ')'

    INCOP     shift, and go to state 116
    DECOP     shift, and go to state 117
    STRUCTOP  shift, and go to state 118
    '['       shift, and go to state 119
    '('       shift, and go to state 120
    '.'       shift, and go to state 121

    $default  reduce using rule 83 (binary)


State 138

   77 and_list: and_list LOGICAL_AND binary .
   79 binary: binary . RELOP binary
   80       | binary . EQUOP binary
   81       | binary . '+' binary
   82       | binary . '-' binary

    EQUOP  shift, and go to state 112
    RELOP  shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115

    $default  reduce using rule 77 (and_list)


State 139

   79 binary: binary . RELOP binary
   80       | binary . EQUOP binary
   80       | binary EQUOP binary .
   81       | binary . '+' binary
   82       | binary . '-' binary

    RELOP  shift, and go to state 113
    '+'    shift, and go to state 114
    '-'    shift, and go to state 115

    $default  reduce using rule 80 (binary)


State 140

   79 binary: binary . RELOP binary
   79       | binary RELOP binary .
   80       | binary . EQUOP binary
   81       | binary . '+' binary
   82       | binary . '-' binary

    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 79 (binary)


State 141

   79 binary: binary . RELOP binary
   80       | binary . EQUOP binary
   81       | binary . '+' binary
   81       | binary '+' binary .
   82       | binary . '-' binary

    $default  reduce using rule 81 (binary)


State 142

   79 binary: binary . RELOP binary
   80       | binary . EQUOP binary
   81       | binary . '+' binary
   82       | binary . '-' binary
   82       | binary '-' binary .

    $default  reduce using rule 82 (binary)


State 143

  101 unary: unary STRUCTOP ID .

    $default  reduce using rule 101 (unary)


State 144

   99 unary: unary '[' expr . ']'

    ']'  shift, and go to state 159


State 145

  102 unary: unary '(' while_func_call . args ')'
  103      | unary '(' while_func_call . ')'

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    ')'            shift, and go to state 160
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    expr      go to state 161
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81
    args      go to state 162


State 146

  100 unary: unary '.' ID .

    $default  reduce using rule 100 (unary)


State 147

   71 expr: unary $@16 '=' . expr

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    expr      go to state 163
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 148

   28 param_decl: param_type_specifier pointers ID '[' . const_expr ']'

    INTEGER_CONST  shift, and go to state 31

    const_expr  go to state 164


State 149

   32 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 165


State 150

   62 stmt: WRITE_INT '(' expr ')' .

    $default  reduce using rule 62 (stmt)


State 151

   63 stmt: WRITE_CHAR '(' expr ')' .

    $default  reduce using rule 63 (stmt)


State 152

   64 stmt: WRITE_STRING '(' expr ')' .

    $default  reduce using rule 64 (stmt)


State 153

   46 stmt: RETURN $@7 expr ';' .

    $default  reduce using rule 46 (stmt)


State 154

   59 stmt: FOR $@12 '(' expr_e . ';' $@13 expr_e ';' $@14 expr_e ')' $@15 stmt

    ';'  shift, and go to state 166


State 155

   67 expr_e: expr .

    $default  reduce using rule 67 (expr_e)


State 156

   37 compound_stmt: '{' local_defs stmt_list . '}'
   39 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    WRITE_INT      shift, and go to state 58
    WRITE_CHAR     shift, and go to state 59
    WRITE_STRING   shift, and go to state 60
    RETURN         shift, and go to state 61
    FOR            shift, and go to state 62
    BREAK          shift, and go to state 63
    CONTINUE       shift, and go to state 64
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68
    ';'            shift, and go to state 69
    '}'            shift, and go to state 167

    WHILE     reduce using rule 51 (@9)
    IF        reduce using rule 65 (before_if)
    $default  reduce using rule 42 ($@6)

    stmt       go to state 71
    $@6        go to state 72
    @9         go to state 73
    before_if  go to state 74
    expr       go to state 75
    or_expr    go to state 76
    or_list    go to state 77
    and_expr   go to state 78
    and_list   go to state 79
    binary     go to state 80
    unary      go to state 81


State 157

   54 stmt: @9 WHILE @10 '(' . expr ')' $@11 stmt

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    expr      go to state 168
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 158

   48 stmt: before_if IF '(' expr . ')' after_if stmt
   50     | before_if IF '(' expr . ')' after_if stmt ELSE @8 stmt

    ')'  shift, and go to state 169


State 159

   99 unary: unary '[' expr ']' .

    $default  reduce using rule 99 (unary)


State 160

  103 unary: unary '(' while_func_call ')' .

    $default  reduce using rule 103 (unary)


State 161

  105 args: expr .

    $default  reduce using rule 105 (args)


State 162

  102 unary: unary '(' while_func_call args . ')'
  106 args: args . ',' expr

    ','  shift, and go to state 170
    ')'  shift, and go to state 171


State 163

   71 expr: unary $@16 '=' expr .

    $default  reduce using rule 71 (expr)


State 164

   28 param_decl: param_type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 172


State 165

   32 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 32 (def)


State 166

   59 stmt: FOR $@12 '(' expr_e ';' . $@13 expr_e ';' $@14 expr_e ')' $@15 stmt

    $default  reduce using rule 56 ($@13)

    $@13  go to state 173


State 167

   37 compound_stmt: '{' local_defs stmt_list '}' .

    $default  reduce using rule 37 (compound_stmt)


State 168

   54 stmt: @9 WHILE @10 '(' expr . ')' $@11 stmt

    ')'  shift, and go to state 174


State 169

   48 stmt: before_if IF '(' expr ')' . after_if stmt
   50     | before_if IF '(' expr ')' . after_if stmt ELSE @8 stmt

    $default  reduce using rule 66 (after_if)

    after_if  go to state 175


State 170

  106 args: args ',' . expr

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    expr      go to state 176
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 171

  102 unary: unary '(' while_func_call args ')' .

    $default  reduce using rule 102 (unary)


State 172

   28 param_decl: param_type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 28 (param_decl)


State 173

   59 stmt: FOR $@12 '(' expr_e ';' $@13 . expr_e ';' $@14 expr_e ')' $@15 stmt

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    $default  reduce using rule 68 (expr_e)

    expr_e    go to state 177
    expr      go to state 155
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 174

   54 stmt: @9 WHILE @10 '(' expr ')' . $@11 stmt

    $default  reduce using rule 53 ($@11)

    $@11  go to state 178


State 175

   48 stmt: before_if IF '(' expr ')' after_if . stmt
   50     | before_if IF '(' expr ')' after_if . stmt ELSE @8 stmt

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    WRITE_INT      shift, and go to state 58
    WRITE_CHAR     shift, and go to state 59
    WRITE_STRING   shift, and go to state 60
    RETURN         shift, and go to state 61
    FOR            shift, and go to state 62
    BREAK          shift, and go to state 63
    CONTINUE       shift, and go to state 64
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68
    ';'            shift, and go to state 69

    WHILE     reduce using rule 51 (@9)
    IF        reduce using rule 65 (before_if)
    $default  reduce using rule 42 ($@6)

    stmt       go to state 179
    $@6        go to state 72
    @9         go to state 73
    before_if  go to state 74
    expr       go to state 75
    or_expr    go to state 76
    or_list    go to state 77
    and_expr   go to state 78
    and_list   go to state 79
    binary     go to state 80
    unary      go to state 81


State 176

  106 args: args ',' expr .

    $default  reduce using rule 106 (args)


State 177

   59 stmt: FOR $@12 '(' expr_e ';' $@13 expr_e . ';' $@14 expr_e ')' $@15 stmt

    ';'  shift, and go to state 180


State 178

   54 stmt: @9 WHILE @10 '(' expr ')' $@11 . stmt

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    WRITE_INT      shift, and go to state 58
    WRITE_CHAR     shift, and go to state 59
    WRITE_STRING   shift, and go to state 60
    RETURN         shift, and go to state 61
    FOR            shift, and go to state 62
    BREAK          shift, and go to state 63
    CONTINUE       shift, and go to state 64
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68
    ';'            shift, and go to state 69

    WHILE     reduce using rule 51 (@9)
    IF        reduce using rule 65 (before_if)
    $default  reduce using rule 42 ($@6)

    stmt       go to state 181
    $@6        go to state 72
    @9         go to state 73
    before_if  go to state 74
    expr       go to state 75
    or_expr    go to state 76
    or_list    go to state 77
    and_expr   go to state 78
    and_list   go to state 79
    binary     go to state 80
    unary      go to state 81


State 179

   48 stmt: before_if IF '(' expr ')' after_if stmt .
   50     | before_if IF '(' expr ')' after_if stmt . ELSE @8 stmt

    ELSE  shift, and go to state 182

    $default  reduce using rule 48 (stmt)


State 180

   59 stmt: FOR $@12 '(' expr_e ';' $@13 expr_e ';' . $@14 expr_e ')' $@15 stmt

    $default  reduce using rule 57 ($@14)

    $@14  go to state 183


State 181

   54 stmt: @9 WHILE @10 '(' expr ')' $@11 stmt .

    $default  reduce using rule 54 (stmt)


State 182

   50 stmt: before_if IF '(' expr ')' after_if stmt ELSE . @8 stmt

    $default  reduce using rule 49 (@8)

    @8  go to state 184


State 183

   59 stmt: FOR $@12 '(' expr_e ';' $@13 expr_e ';' $@14 . expr_e ')' $@15 stmt

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68

    $default  reduce using rule 68 (expr_e)

    expr_e    go to state 185
    expr      go to state 155
    or_expr   go to state 76
    or_list   go to state 77
    and_expr  go to state 78
    and_list  go to state 79
    binary    go to state 80
    unary     go to state 81


State 184

   50 stmt: before_if IF '(' expr ')' after_if stmt ELSE @8 . stmt

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    WRITE_INT      shift, and go to state 58
    WRITE_CHAR     shift, and go to state 59
    WRITE_STRING   shift, and go to state 60
    RETURN         shift, and go to state 61
    FOR            shift, and go to state 62
    BREAK          shift, and go to state 63
    CONTINUE       shift, and go to state 64
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68
    ';'            shift, and go to state 69

    WHILE     reduce using rule 51 (@9)
    IF        reduce using rule 65 (before_if)
    $default  reduce using rule 42 ($@6)

    stmt       go to state 186
    $@6        go to state 72
    @9         go to state 73
    before_if  go to state 74
    expr       go to state 75
    or_expr    go to state 76
    or_list    go to state 77
    and_expr   go to state 78
    and_list   go to state 79
    binary     go to state 80
    unary      go to state 81


State 185

   59 stmt: FOR $@12 '(' expr_e ';' $@13 expr_e ';' $@14 expr_e . ')' $@15 stmt

    ')'  shift, and go to state 187


State 186

   50 stmt: before_if IF '(' expr ')' after_if stmt ELSE @8 stmt .

    $default  reduce using rule 50 (stmt)


State 187

   59 stmt: FOR $@12 '(' expr_e ';' $@13 expr_e ';' $@14 expr_e ')' . $@15 stmt

    $default  reduce using rule 58 ($@15)

    $@15  go to state 188


State 188

   59 stmt: FOR $@12 '(' expr_e ';' $@13 expr_e ';' $@14 expr_e ')' $@15 . stmt

    '&'            shift, and go to state 50
    '-'            shift, and go to state 51
    '*'            shift, and go to state 52
    '!'            shift, and go to state 53
    INCOP          shift, and go to state 54
    DECOP          shift, and go to state 55
    '('            shift, and go to state 56
    NULL_TOKEN     shift, and go to state 57
    WRITE_INT      shift, and go to state 58
    WRITE_CHAR     shift, and go to state 59
    WRITE_STRING   shift, and go to state 60
    RETURN         shift, and go to state 61
    FOR            shift, and go to state 62
    BREAK          shift, and go to state 63
    CONTINUE       shift, and go to state 64
    ID             shift, and go to state 65
    INTEGER_CONST  shift, and go to state 66
    CHAR_CONST     shift, and go to state 67
    STRING         shift, and go to state 68
    ';'            shift, and go to state 69

    WHILE     reduce using rule 51 (@9)
    IF        reduce using rule 65 (before_if)
    $default  reduce using rule 42 ($@6)

    stmt       go to state 189
    $@6        go to state 72
    @9         go to state 73
    before_if  go to state 74
    expr       go to state 75
    or_expr    go to state 76
    or_list    go to state 77
    and_expr   go to state 78
    and_list   go to state 79
    binary     go to state 80
    unary      go to state 81


State 189

   59 stmt: FOR $@12 '(' expr_e ';' $@13 expr_e ';' $@14 expr_e ')' $@15 stmt .

    $default  reduce using rule 59 (stmt)
