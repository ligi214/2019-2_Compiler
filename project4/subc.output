Terminals unused in grammar

   ASSIGNOP
   '/'
   '%'
   UNARY_OP


Rules useless in parser due to conflicts

   90 $@8: %empty


State 24 conflicts: 1 shift/reduce
State 78 conflicts: 1 reduce/reduce
State 85 conflicts: 1 reduce/reduce
State 86 conflicts: 1 reduce/reduce
State 87 conflicts: 1 reduce/reduce
State 88 conflicts: 1 reduce/reduce
State 89 conflicts: 1 reduce/reduce
State 90 conflicts: 1 reduce/reduce
State 92 conflicts: 1 reduce/reduce
State 135 conflicts: 1 reduce/reduce
State 164 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ext_def_list

    2 ext_def_list: ext_def_list ext_def
    3             | %empty

    4 ext_def: type_specifier pointers ID ';'
    5        | type_specifier pointers ID '[' const_expr ']' ';'
    6        | func_decl ';'
    7        | type_specifier ';'
    8        | func_decl func_compound_stmt

    9 type_specifier: TYPE
   10               | VOID
   11               | struct_specifier

   12 $@1: %empty

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}'
   14                 | STRUCT ID

   15 func_decl: type_specifier pointers ID '(' ')'
   16          | type_specifier pointers ID '(' VOID ')'

   17 @2: %empty

   18 func_decl: type_specifier pointers ID '(' @2 param_list ')'

   19 pointers: '*'
   20         | %empty

   21 param_list: param_decl
   22           | param_list ',' param_decl

   23 param_decl: type_specifier pointers ID
   24           | type_specifier pointers ID '[' const_expr ']'

   25 def_list: def_list def
   26         | %empty

   27 def: type_specifier pointers ID ';'
   28    | type_specifier pointers ID '[' const_expr ']' ';'
   29    | type_specifier ';'
   30    | func_decl ';'

   31 $@3: %empty

   32 func_compound_stmt: '{' local_defs $@3 stmt_list '}'

   33 compound_stmt: '{' local_defs stmt_list '}'

   34 local_defs: def_list

   35 stmt_list: stmt_list stmt
   36          | %empty

   37 stmt: expr ';'

   38 $@4: %empty

   39 stmt: $@4 compound_stmt
   40     | RETURN ';'

   41 $@5: %empty

   42 stmt: RETURN $@5 expr ';'
   43     | ';'
   44     | IF '(' expr ')' stmt
   45     | IF '(' expr ')' stmt ELSE stmt
   46     | WHILE '(' expr ')' stmt
   47     | FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt
   48     | BREAK ';'
   49     | CONTINUE ';'
   50     | WRITE_INT '(' expr ')'
   51     | WRITE_CHAR '(' expr ')'
   52     | WRITE_STRING '(' expr ')'

   53 expr_e: expr
   54       | %empty

   55 const_expr: INTEGER_CONST

   56 $@6: %empty

   57 expr: unary $@6 '=' expr
   58     | or_expr

   59 or_expr: or_list

   60 or_list: or_list LOGICAL_OR and_expr
   61        | and_expr

   62 and_expr: and_list

   63 and_list: and_list LOGICAL_AND binary
   64         | binary

   65 binary: binary RELOP binary
   66       | binary EQUOP binary
   67       | binary '+' binary
   68       | binary '-' binary
   69       | unary

   70 unary: '(' expr ')'
   71      | '(' unary ')'
   72      | INTEGER_CONST
   73      | CHAR_CONST
   74      | STRING
   75      | NULL_TOKEN
   76      | ID
   77      | '-' unary
   78      | '!' unary
   79      | unary INCOP
   80      | unary DECOP
   81      | INCOP unary
   82      | DECOP unary
   83      | '&' unary
   84      | '*' unary
   85      | unary '[' expr ']'
   86      | unary '.' ID
   87      | unary STRUCTOP ID

   88 $@7: %empty

   89 unary: unary $@7 '(' args ')'

   90 $@8: %empty

   91 unary: unary $@8 '(' ')'

   92 args: expr
   93     | args ',' expr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 78
'%' (37)
'&' (38) 83
'(' (40) 15 16 18 44 45 46 47 50 51 52 70 71 89 91
')' (41) 15 16 18 44 45 46 47 50 51 52 70 71 89 91
'*' (42) 19 84
'+' (43) 67
',' (44) 22 93
'-' (45) 68 77
'.' (46) 86
'/' (47)
';' (59) 4 5 6 7 27 28 29 30 37 40 42 43 47 48 49
'=' (61) 57
'[' (91) 5 24 28 85
']' (93) 5 24 28 85
'{' (123) 13 32 33
'}' (125) 13 32 33
error (256)
ASSIGNOP (258)
LOGICAL_OR (259) 60
LOGICAL_AND (260) 63
EQUOP (261) 66
RELOP (262) 65
INCOP (263) 79 81
DECOP (264) 80 82
UNARY_OP (265)
STRUCTOP (266) 87
TYPE (267) 9
VOID (268) 10 16
NULL_TOKEN (269) 75
WRITE_INT (270) 50
WRITE_CHAR (271) 51
WRITE_STRING (272) 52
STRUCT (273) 13 14
RETURN (274) 40 42
IF (275) 44 45
ELSE (276) 45
WHILE (277) 46
FOR (278) 47
BREAK (279) 48
CONTINUE (280) 49
ID (281) 4 5 13 14 15 16 18 23 24 27 28 76 86 87
INTEGER_CONST (282) 55 72
CHAR_CONST (283) 73
STRING (284) 74


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
ext_def_list (49)
    on left: 2 3, on right: 1 2
ext_def (50)
    on left: 4 5 6 7 8, on right: 2
type_specifier (51)
    on left: 9 10 11, on right: 4 5 7 15 16 18 23 24 27 28 29
struct_specifier (52)
    on left: 13 14, on right: 11
$@1 (53)
    on left: 12, on right: 13
func_decl (54)
    on left: 15 16 18, on right: 6 8 30
@2 (55)
    on left: 17, on right: 18
pointers (56)
    on left: 19 20, on right: 4 5 15 16 18 23 24 27 28
param_list (57)
    on left: 21 22, on right: 18 22
param_decl (58)
    on left: 23 24, on right: 21 22
def_list (59)
    on left: 25 26, on right: 13 25 34
def (60)
    on left: 27 28 29 30, on right: 25
func_compound_stmt (61)
    on left: 32, on right: 8
$@3 (62)
    on left: 31, on right: 32
compound_stmt (63)
    on left: 33, on right: 39
local_defs (64)
    on left: 34, on right: 32 33
stmt_list (65)
    on left: 35 36, on right: 32 33 35
stmt (66)
    on left: 37 39 40 42 43 44 45 46 47 48 49 50 51 52, on right: 35
    44 45 46 47
$@4 (67)
    on left: 38, on right: 39
$@5 (68)
    on left: 41, on right: 42
expr_e (69)
    on left: 53 54, on right: 47
const_expr (70)
    on left: 55, on right: 5 24 28
expr (71)
    on left: 57 58, on right: 37 42 44 45 46 50 51 52 53 57 70 85 92
    93
$@6 (72)
    on left: 56, on right: 57
or_expr (73)
    on left: 59, on right: 58
or_list (74)
    on left: 60 61, on right: 59 60
and_expr (75)
    on left: 62, on right: 60 61
and_list (76)
    on left: 63 64, on right: 62 63
binary (77)
    on left: 65 66 67 68 69, on right: 63 64 65 66 67 68
unary (78)
    on left: 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
    89 91, on right: 57 69 71 77 78 79 80 81 82 83 84 85 86 87 89 91
$@7 (79)
    on left: 88, on right: 89
$@8 (80)
    on left: 90, on right: 91
args (81)
    on left: 92 93, on right: 89 93


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (ext_def_list)

    program       go to state 1
    ext_def_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: ext_def_list .
    2 ext_def_list: ext_def_list . ext_def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 1 (program)

    ext_def           go to state 7
    type_specifier    go to state 8
    struct_specifier  go to state 9
    func_decl         go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

    9 type_specifier: TYPE .

    $default  reduce using rule 9 (type_specifier)


State 5

   10 type_specifier: VOID .

    $default  reduce using rule 10 (type_specifier)


State 6

   13 struct_specifier: STRUCT . ID '{' $@1 def_list '}'
   14                 | STRUCT . ID

    ID  shift, and go to state 11


State 7

    2 ext_def_list: ext_def_list ext_def .

    $default  reduce using rule 2 (ext_def_list)


State 8

    4 ext_def: type_specifier . pointers ID ';'
    5        | type_specifier . pointers ID '[' const_expr ']' ';'
    7        | type_specifier . ';'
   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   18          | type_specifier . pointers ID '(' @2 param_list ')'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 13

    $default  reduce using rule 20 (pointers)

    pointers  go to state 14


State 9

   11 type_specifier: struct_specifier .

    $default  reduce using rule 11 (type_specifier)


State 10

    6 ext_def: func_decl . ';'
    8        | func_decl . func_compound_stmt

    ';'  shift, and go to state 15
    '{'  shift, and go to state 16

    func_compound_stmt  go to state 17


State 11

   13 struct_specifier: STRUCT ID . '{' $@1 def_list '}'
   14                 | STRUCT ID .

    '{'  shift, and go to state 18

    $default  reduce using rule 14 (struct_specifier)


State 12

   19 pointers: '*' .

    $default  reduce using rule 19 (pointers)


State 13

    7 ext_def: type_specifier ';' .

    $default  reduce using rule 7 (ext_def)


State 14

    4 ext_def: type_specifier pointers . ID ';'
    5        | type_specifier pointers . ID '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   18          | type_specifier pointers . ID '(' @2 param_list ')'

    ID  shift, and go to state 19


State 15

    6 ext_def: func_decl ';' .

    $default  reduce using rule 6 (ext_def)


State 16

   32 func_compound_stmt: '{' . local_defs $@3 stmt_list '}'

    $default  reduce using rule 26 (def_list)

    def_list    go to state 20
    local_defs  go to state 21


State 17

    8 ext_def: func_decl func_compound_stmt .

    $default  reduce using rule 8 (ext_def)


State 18

   13 struct_specifier: STRUCT ID '{' . $@1 def_list '}'

    $default  reduce using rule 12 ($@1)

    $@1  go to state 22


State 19

    4 ext_def: type_specifier pointers ID . ';'
    5        | type_specifier pointers ID . '[' const_expr ']' ';'
   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   18          | type_specifier pointers ID . '(' @2 param_list ')'

    '['  shift, and go to state 23
    '('  shift, and go to state 24
    ';'  shift, and go to state 25


State 20

   25 def_list: def_list . def
   34 local_defs: def_list .

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    $default  reduce using rule 34 (local_defs)

    type_specifier    go to state 26
    struct_specifier  go to state 9
    func_decl         go to state 27
    def               go to state 28


State 21

   32 func_compound_stmt: '{' local_defs . $@3 stmt_list '}'

    $default  reduce using rule 31 ($@3)

    $@3  go to state 29


State 22

   13 struct_specifier: STRUCT ID '{' $@1 . def_list '}'

    $default  reduce using rule 26 (def_list)

    def_list  go to state 30


State 23

    5 ext_def: type_specifier pointers ID '[' . const_expr ']' ';'

    INTEGER_CONST  shift, and go to state 31

    const_expr  go to state 32


State 24

   15 func_decl: type_specifier pointers ID '(' . ')'
   16          | type_specifier pointers ID '(' . VOID ')'
   18          | type_specifier pointers ID '(' . @2 param_list ')'

    ')'   shift, and go to state 33
    VOID  shift, and go to state 34

    VOID      [reduce using rule 17 (@2)]
    $default  reduce using rule 17 (@2)

    @2  go to state 35


State 25

    4 ext_def: type_specifier pointers ID ';' .

    $default  reduce using rule 4 (ext_def)


State 26

   15 func_decl: type_specifier . pointers ID '(' ')'
   16          | type_specifier . pointers ID '(' VOID ')'
   18          | type_specifier . pointers ID '(' @2 param_list ')'
   27 def: type_specifier . pointers ID ';'
   28    | type_specifier . pointers ID '[' const_expr ']' ';'
   29    | type_specifier . ';'

    '*'  shift, and go to state 12
    ';'  shift, and go to state 36

    $default  reduce using rule 20 (pointers)

    pointers  go to state 37


State 27

   30 def: func_decl . ';'

    ';'  shift, and go to state 38


State 28

   25 def_list: def_list def .

    $default  reduce using rule 25 (def_list)


State 29

   32 func_compound_stmt: '{' local_defs $@3 . stmt_list '}'

    $default  reduce using rule 36 (stmt_list)

    stmt_list  go to state 39


State 30

   13 struct_specifier: STRUCT ID '{' $@1 def_list . '}'
   25 def_list: def_list . def

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6
    '}'     shift, and go to state 40

    type_specifier    go to state 26
    struct_specifier  go to state 9
    func_decl         go to state 27
    def               go to state 28


State 31

   55 const_expr: INTEGER_CONST .

    $default  reduce using rule 55 (const_expr)


State 32

    5 ext_def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 41


State 33

   15 func_decl: type_specifier pointers ID '(' ')' .

    $default  reduce using rule 15 (func_decl)


State 34

   16 func_decl: type_specifier pointers ID '(' VOID . ')'

    ')'  shift, and go to state 42


State 35

   18 func_decl: type_specifier pointers ID '(' @2 . param_list ')'

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 43
    struct_specifier  go to state 9
    param_list        go to state 44
    param_decl        go to state 45


State 36

   29 def: type_specifier ';' .

    $default  reduce using rule 29 (def)


State 37

   15 func_decl: type_specifier pointers . ID '(' ')'
   16          | type_specifier pointers . ID '(' VOID ')'
   18          | type_specifier pointers . ID '(' @2 param_list ')'
   27 def: type_specifier pointers . ID ';'
   28    | type_specifier pointers . ID '[' const_expr ']' ';'

    ID  shift, and go to state 46


State 38

   30 def: func_decl ';' .

    $default  reduce using rule 30 (def)


State 39

   32 func_compound_stmt: '{' local_defs $@3 stmt_list . '}'
   35 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    WRITE_INT      shift, and go to state 55
    WRITE_CHAR     shift, and go to state 56
    WRITE_STRING   shift, and go to state 57
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67
    ';'            shift, and go to state 68
    '}'            shift, and go to state 69

    $default  reduce using rule 38 ($@4)

    stmt      go to state 70
    $@4       go to state 71
    expr      go to state 72
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 40

   13 struct_specifier: STRUCT ID '{' $@1 def_list '}' .

    $default  reduce using rule 13 (struct_specifier)


State 41

    5 ext_def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 79


State 42

   16 func_decl: type_specifier pointers ID '(' VOID ')' .

    $default  reduce using rule 16 (func_decl)


State 43

   23 param_decl: type_specifier . pointers ID
   24           | type_specifier . pointers ID '[' const_expr ']'

    '*'  shift, and go to state 12

    $default  reduce using rule 20 (pointers)

    pointers  go to state 80


State 44

   18 func_decl: type_specifier pointers ID '(' @2 param_list . ')'
   22 param_list: param_list . ',' param_decl

    ','  shift, and go to state 81
    ')'  shift, and go to state 82


State 45

   21 param_list: param_decl .

    $default  reduce using rule 21 (param_list)


State 46

   15 func_decl: type_specifier pointers ID . '(' ')'
   16          | type_specifier pointers ID . '(' VOID ')'
   18          | type_specifier pointers ID . '(' @2 param_list ')'
   27 def: type_specifier pointers ID . ';'
   28    | type_specifier pointers ID . '[' const_expr ']' ';'

    '['  shift, and go to state 83
    '('  shift, and go to state 24
    ';'  shift, and go to state 84


State 47

   83 unary: '&' . unary

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    unary  go to state 85


State 48

   77 unary: '-' . unary

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    unary  go to state 86


State 49

   84 unary: '*' . unary

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    unary  go to state 87


State 50

   78 unary: '!' . unary

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    unary  go to state 88


State 51

   81 unary: INCOP . unary

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    unary  go to state 89


State 52

   82 unary: DECOP . unary

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    unary  go to state 90


State 53

   70 unary: '(' . expr ')'
   71      | '(' . unary ')'

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    expr      go to state 91
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 92


State 54

   75 unary: NULL_TOKEN .

    $default  reduce using rule 75 (unary)


State 55

   50 stmt: WRITE_INT . '(' expr ')'

    '('  shift, and go to state 93


State 56

   51 stmt: WRITE_CHAR . '(' expr ')'

    '('  shift, and go to state 94


State 57

   52 stmt: WRITE_STRING . '(' expr ')'

    '('  shift, and go to state 95


State 58

   40 stmt: RETURN . ';'
   42     | RETURN . $@5 expr ';'

    ';'  shift, and go to state 96

    $default  reduce using rule 41 ($@5)

    $@5  go to state 97


State 59

   44 stmt: IF . '(' expr ')' stmt
   45     | IF . '(' expr ')' stmt ELSE stmt

    '('  shift, and go to state 98


State 60

   46 stmt: WHILE . '(' expr ')' stmt

    '('  shift, and go to state 99


State 61

   47 stmt: FOR . '(' expr_e ';' expr_e ';' expr_e ')' stmt

    '('  shift, and go to state 100


State 62

   48 stmt: BREAK . ';'

    ';'  shift, and go to state 101


State 63

   49 stmt: CONTINUE . ';'

    ';'  shift, and go to state 102


State 64

   76 unary: ID .

    $default  reduce using rule 76 (unary)


State 65

   72 unary: INTEGER_CONST .

    $default  reduce using rule 72 (unary)


State 66

   73 unary: CHAR_CONST .

    $default  reduce using rule 73 (unary)


State 67

   74 unary: STRING .

    $default  reduce using rule 74 (unary)


State 68

   43 stmt: ';' .

    $default  reduce using rule 43 (stmt)


State 69

   32 func_compound_stmt: '{' local_defs $@3 stmt_list '}' .

    $default  reduce using rule 32 (func_compound_stmt)


State 70

   35 stmt_list: stmt_list stmt .

    $default  reduce using rule 35 (stmt_list)


State 71

   39 stmt: $@4 . compound_stmt

    '{'  shift, and go to state 103

    compound_stmt  go to state 104


State 72

   37 stmt: expr . ';'

    ';'  shift, and go to state 105


State 73

   58 expr: or_expr .

    $default  reduce using rule 58 (expr)


State 74

   59 or_expr: or_list .
   60 or_list: or_list . LOGICAL_OR and_expr

    LOGICAL_OR  shift, and go to state 106

    $default  reduce using rule 59 (or_expr)


State 75

   61 or_list: and_expr .

    $default  reduce using rule 61 (or_list)


State 76

   62 and_expr: and_list .
   63 and_list: and_list . LOGICAL_AND binary

    LOGICAL_AND  shift, and go to state 107

    $default  reduce using rule 62 (and_expr)


State 77

   64 and_list: binary .
   65 binary: binary . RELOP binary
   66       | binary . EQUOP binary
   67       | binary . '+' binary
   68       | binary . '-' binary

    EQUOP  shift, and go to state 108
    RELOP  shift, and go to state 109
    '+'    shift, and go to state 110
    '-'    shift, and go to state 111

    $default  reduce using rule 64 (and_list)


State 78

   57 expr: unary . $@6 '=' expr
   69 binary: unary .
   79 unary: unary . INCOP
   80      | unary . DECOP
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   89      | unary . $@7 '(' args ')'
   91      | unary . $@8 '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 115
    '.'       shift, and go to state 116

    '='       reduce using rule 56 ($@6)
    '('       reduce using rule 88 ($@7)
    '('       [reduce using rule 90 ($@8)]
    $default  reduce using rule 69 (binary)

    $@6  go to state 117
    $@7  go to state 118
    $@8  go to state 119


State 79

    5 ext_def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 5 (ext_def)


State 80

   23 param_decl: type_specifier pointers . ID
   24           | type_specifier pointers . ID '[' const_expr ']'

    ID  shift, and go to state 120


State 81

   22 param_list: param_list ',' . param_decl

    TYPE    shift, and go to state 4
    VOID    shift, and go to state 5
    STRUCT  shift, and go to state 6

    type_specifier    go to state 43
    struct_specifier  go to state 9
    param_decl        go to state 121


State 82

   18 func_decl: type_specifier pointers ID '(' @2 param_list ')' .

    $default  reduce using rule 18 (func_decl)


State 83

   28 def: type_specifier pointers ID '[' . const_expr ']' ';'

    INTEGER_CONST  shift, and go to state 31

    const_expr  go to state 122


State 84

   27 def: type_specifier pointers ID ';' .

    $default  reduce using rule 27 (def)


State 85

   79 unary: unary . INCOP
   80      | unary . DECOP
   83      | '&' unary .
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   89      | unary . $@7 '(' args ')'
   91      | unary . $@8 '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 115
    '.'       shift, and go to state 116

    '('       reduce using rule 83 (unary)
    '('       [reduce using rule 88 ($@7)]
    '('       [reduce using rule 90 ($@8)]
    $default  reduce using rule 83 (unary)

    $@7  go to state 118
    $@8  go to state 119


State 86

   77 unary: '-' unary .
   79      | unary . INCOP
   80      | unary . DECOP
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   89      | unary . $@7 '(' args ')'
   91      | unary . $@8 '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 115
    '.'       shift, and go to state 116

    '('       reduce using rule 77 (unary)
    '('       [reduce using rule 88 ($@7)]
    '('       [reduce using rule 90 ($@8)]
    $default  reduce using rule 77 (unary)

    $@7  go to state 118
    $@8  go to state 119


State 87

   79 unary: unary . INCOP
   80      | unary . DECOP
   84      | '*' unary .
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   89      | unary . $@7 '(' args ')'
   91      | unary . $@8 '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 115
    '.'       shift, and go to state 116

    '('       reduce using rule 84 (unary)
    '('       [reduce using rule 88 ($@7)]
    '('       [reduce using rule 90 ($@8)]
    $default  reduce using rule 84 (unary)

    $@7  go to state 118
    $@8  go to state 119


State 88

   78 unary: '!' unary .
   79      | unary . INCOP
   80      | unary . DECOP
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   89      | unary . $@7 '(' args ')'
   91      | unary . $@8 '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 115
    '.'       shift, and go to state 116

    '('       reduce using rule 78 (unary)
    '('       [reduce using rule 88 ($@7)]
    '('       [reduce using rule 90 ($@8)]
    $default  reduce using rule 78 (unary)

    $@7  go to state 118
    $@8  go to state 119


State 89

   79 unary: unary . INCOP
   80      | unary . DECOP
   81      | INCOP unary .
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   89      | unary . $@7 '(' args ')'
   91      | unary . $@8 '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 115
    '.'       shift, and go to state 116

    '('       reduce using rule 81 (unary)
    '('       [reduce using rule 88 ($@7)]
    '('       [reduce using rule 90 ($@8)]
    $default  reduce using rule 81 (unary)

    $@7  go to state 118
    $@8  go to state 119


State 90

   79 unary: unary . INCOP
   80      | unary . DECOP
   82      | DECOP unary .
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   89      | unary . $@7 '(' args ')'
   91      | unary . $@8 '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 115
    '.'       shift, and go to state 116

    '('       reduce using rule 82 (unary)
    '('       [reduce using rule 88 ($@7)]
    '('       [reduce using rule 90 ($@8)]
    $default  reduce using rule 82 (unary)

    $@7  go to state 118
    $@8  go to state 119


State 91

   70 unary: '(' expr . ')'

    ')'  shift, and go to state 123


State 92

   57 expr: unary . $@6 '=' expr
   69 binary: unary .
   71 unary: '(' unary . ')'
   79      | unary . INCOP
   80      | unary . DECOP
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   89      | unary . $@7 '(' args ')'
   91      | unary . $@8 '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 115
    ')'       shift, and go to state 124
    '.'       shift, and go to state 116

    '='       reduce using rule 56 ($@6)
    '('       reduce using rule 88 ($@7)
    '('       [reduce using rule 90 ($@8)]
    $default  reduce using rule 69 (binary)

    $@6  go to state 117
    $@7  go to state 118
    $@8  go to state 119


State 93

   50 stmt: WRITE_INT '(' . expr ')'

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    expr      go to state 125
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 94

   51 stmt: WRITE_CHAR '(' . expr ')'

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    expr      go to state 126
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 95

   52 stmt: WRITE_STRING '(' . expr ')'

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    expr      go to state 127
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 96

   40 stmt: RETURN ';' .

    $default  reduce using rule 40 (stmt)


State 97

   42 stmt: RETURN $@5 . expr ';'

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    expr      go to state 128
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 98

   44 stmt: IF '(' . expr ')' stmt
   45     | IF '(' . expr ')' stmt ELSE stmt

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    expr      go to state 129
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 99

   46 stmt: WHILE '(' . expr ')' stmt

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    expr      go to state 130
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 100

   47 stmt: FOR '(' . expr_e ';' expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    $default  reduce using rule 54 (expr_e)

    expr_e    go to state 131
    expr      go to state 132
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 101

   48 stmt: BREAK ';' .

    $default  reduce using rule 48 (stmt)


State 102

   49 stmt: CONTINUE ';' .

    $default  reduce using rule 49 (stmt)


State 103

   33 compound_stmt: '{' . local_defs stmt_list '}'

    $default  reduce using rule 26 (def_list)

    def_list    go to state 20
    local_defs  go to state 133


State 104

   39 stmt: $@4 compound_stmt .

    $default  reduce using rule 39 (stmt)


State 105

   37 stmt: expr ';' .

    $default  reduce using rule 37 (stmt)


State 106

   60 or_list: or_list LOGICAL_OR . and_expr

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    and_expr  go to state 134
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 135


State 107

   63 and_list: and_list LOGICAL_AND . binary

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    binary  go to state 136
    unary   go to state 135


State 108

   66 binary: binary EQUOP . binary

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    binary  go to state 137
    unary   go to state 135


State 109

   65 binary: binary RELOP . binary

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    binary  go to state 138
    unary   go to state 135


State 110

   67 binary: binary '+' . binary

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    binary  go to state 139
    unary   go to state 135


State 111

   68 binary: binary '-' . binary

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    binary  go to state 140
    unary   go to state 135


State 112

   79 unary: unary INCOP .

    $default  reduce using rule 79 (unary)


State 113

   80 unary: unary DECOP .

    $default  reduce using rule 80 (unary)


State 114

   87 unary: unary STRUCTOP . ID

    ID  shift, and go to state 141


State 115

   85 unary: unary '[' . expr ']'

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    expr      go to state 142
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 116

   86 unary: unary '.' . ID

    ID  shift, and go to state 143


State 117

   57 expr: unary $@6 . '=' expr

    '='  shift, and go to state 144


State 118

   89 unary: unary $@7 . '(' args ')'

    '('  shift, and go to state 145


State 119

   91 unary: unary $@8 . '(' ')'

    '('  shift, and go to state 146


State 120

   23 param_decl: type_specifier pointers ID .
   24           | type_specifier pointers ID . '[' const_expr ']'

    '['  shift, and go to state 147

    $default  reduce using rule 23 (param_decl)


State 121

   22 param_list: param_list ',' param_decl .

    $default  reduce using rule 22 (param_list)


State 122

   28 def: type_specifier pointers ID '[' const_expr . ']' ';'

    ']'  shift, and go to state 148


State 123

   70 unary: '(' expr ')' .

    $default  reduce using rule 70 (unary)


State 124

   71 unary: '(' unary ')' .

    $default  reduce using rule 71 (unary)


State 125

   50 stmt: WRITE_INT '(' expr . ')'

    ')'  shift, and go to state 149


State 126

   51 stmt: WRITE_CHAR '(' expr . ')'

    ')'  shift, and go to state 150


State 127

   52 stmt: WRITE_STRING '(' expr . ')'

    ')'  shift, and go to state 151


State 128

   42 stmt: RETURN $@5 expr . ';'

    ';'  shift, and go to state 152


State 129

   44 stmt: IF '(' expr . ')' stmt
   45     | IF '(' expr . ')' stmt ELSE stmt

    ')'  shift, and go to state 153


State 130

   46 stmt: WHILE '(' expr . ')' stmt

    ')'  shift, and go to state 154


State 131

   47 stmt: FOR '(' expr_e . ';' expr_e ';' expr_e ')' stmt

    ';'  shift, and go to state 155


State 132

   53 expr_e: expr .

    $default  reduce using rule 53 (expr_e)


State 133

   33 compound_stmt: '{' local_defs . stmt_list '}'

    $default  reduce using rule 36 (stmt_list)

    stmt_list  go to state 156


State 134

   60 or_list: or_list LOGICAL_OR and_expr .

    $default  reduce using rule 60 (or_list)


State 135

   69 binary: unary .
   79 unary: unary . INCOP
   80      | unary . DECOP
   85      | unary . '[' expr ']'
   86      | unary . '.' ID
   87      | unary . STRUCTOP ID
   89      | unary . $@7 '(' args ')'
   91      | unary . $@8 '(' ')'

    INCOP     shift, and go to state 112
    DECOP     shift, and go to state 113
    STRUCTOP  shift, and go to state 114
    '['       shift, and go to state 115
    '.'       shift, and go to state 116

    '('       reduce using rule 88 ($@7)
    '('       [reduce using rule 90 ($@8)]
    $default  reduce using rule 69 (binary)

    $@7  go to state 118
    $@8  go to state 119


State 136

   63 and_list: and_list LOGICAL_AND binary .
   65 binary: binary . RELOP binary
   66       | binary . EQUOP binary
   67       | binary . '+' binary
   68       | binary . '-' binary

    EQUOP  shift, and go to state 108
    RELOP  shift, and go to state 109
    '+'    shift, and go to state 110
    '-'    shift, and go to state 111

    $default  reduce using rule 63 (and_list)


State 137

   65 binary: binary . RELOP binary
   66       | binary . EQUOP binary
   66       | binary EQUOP binary .
   67       | binary . '+' binary
   68       | binary . '-' binary

    RELOP  shift, and go to state 109
    '+'    shift, and go to state 110
    '-'    shift, and go to state 111

    $default  reduce using rule 66 (binary)


State 138

   65 binary: binary . RELOP binary
   65       | binary RELOP binary .
   66       | binary . EQUOP binary
   67       | binary . '+' binary
   68       | binary . '-' binary

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111

    $default  reduce using rule 65 (binary)


State 139

   65 binary: binary . RELOP binary
   66       | binary . EQUOP binary
   67       | binary . '+' binary
   67       | binary '+' binary .
   68       | binary . '-' binary

    $default  reduce using rule 67 (binary)


State 140

   65 binary: binary . RELOP binary
   66       | binary . EQUOP binary
   67       | binary . '+' binary
   68       | binary . '-' binary
   68       | binary '-' binary .

    $default  reduce using rule 68 (binary)


State 141

   87 unary: unary STRUCTOP ID .

    $default  reduce using rule 87 (unary)


State 142

   85 unary: unary '[' expr . ']'

    ']'  shift, and go to state 157


State 143

   86 unary: unary '.' ID .

    $default  reduce using rule 86 (unary)


State 144

   57 expr: unary $@6 '=' . expr

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    expr      go to state 158
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 145

   89 unary: unary $@7 '(' . args ')'

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    expr      go to state 159
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78
    args      go to state 160


State 146

   91 unary: unary $@8 '(' . ')'

    ')'  shift, and go to state 161


State 147

   24 param_decl: type_specifier pointers ID '[' . const_expr ']'

    INTEGER_CONST  shift, and go to state 31

    const_expr  go to state 162


State 148

   28 def: type_specifier pointers ID '[' const_expr ']' . ';'

    ';'  shift, and go to state 163


State 149

   50 stmt: WRITE_INT '(' expr ')' .

    $default  reduce using rule 50 (stmt)


State 150

   51 stmt: WRITE_CHAR '(' expr ')' .

    $default  reduce using rule 51 (stmt)


State 151

   52 stmt: WRITE_STRING '(' expr ')' .

    $default  reduce using rule 52 (stmt)


State 152

   42 stmt: RETURN $@5 expr ';' .

    $default  reduce using rule 42 (stmt)


State 153

   44 stmt: IF '(' expr ')' . stmt
   45     | IF '(' expr ')' . stmt ELSE stmt

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    WRITE_INT      shift, and go to state 55
    WRITE_CHAR     shift, and go to state 56
    WRITE_STRING   shift, and go to state 57
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67
    ';'            shift, and go to state 68

    $default  reduce using rule 38 ($@4)

    stmt      go to state 164
    $@4       go to state 71
    expr      go to state 72
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 154

   46 stmt: WHILE '(' expr ')' . stmt

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    WRITE_INT      shift, and go to state 55
    WRITE_CHAR     shift, and go to state 56
    WRITE_STRING   shift, and go to state 57
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67
    ';'            shift, and go to state 68

    $default  reduce using rule 38 ($@4)

    stmt      go to state 165
    $@4       go to state 71
    expr      go to state 72
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 155

   47 stmt: FOR '(' expr_e ';' . expr_e ';' expr_e ')' stmt

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    $default  reduce using rule 54 (expr_e)

    expr_e    go to state 166
    expr      go to state 132
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 156

   33 compound_stmt: '{' local_defs stmt_list . '}'
   35 stmt_list: stmt_list . stmt

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    WRITE_INT      shift, and go to state 55
    WRITE_CHAR     shift, and go to state 56
    WRITE_STRING   shift, and go to state 57
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67
    ';'            shift, and go to state 68
    '}'            shift, and go to state 167

    $default  reduce using rule 38 ($@4)

    stmt      go to state 70
    $@4       go to state 71
    expr      go to state 72
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 157

   85 unary: unary '[' expr ']' .

    $default  reduce using rule 85 (unary)


State 158

   57 expr: unary $@6 '=' expr .

    $default  reduce using rule 57 (expr)


State 159

   92 args: expr .

    $default  reduce using rule 92 (args)


State 160

   89 unary: unary $@7 '(' args . ')'
   93 args: args . ',' expr

    ','  shift, and go to state 168
    ')'  shift, and go to state 169


State 161

   91 unary: unary $@8 '(' ')' .

    $default  reduce using rule 91 (unary)


State 162

   24 param_decl: type_specifier pointers ID '[' const_expr . ']'

    ']'  shift, and go to state 170


State 163

   28 def: type_specifier pointers ID '[' const_expr ']' ';' .

    $default  reduce using rule 28 (def)


State 164

   44 stmt: IF '(' expr ')' stmt .
   45     | IF '(' expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 171

    ELSE      [reduce using rule 44 (stmt)]
    $default  reduce using rule 44 (stmt)


State 165

   46 stmt: WHILE '(' expr ')' stmt .

    $default  reduce using rule 46 (stmt)


State 166

   47 stmt: FOR '(' expr_e ';' expr_e . ';' expr_e ')' stmt

    ';'  shift, and go to state 172


State 167

   33 compound_stmt: '{' local_defs stmt_list '}' .

    $default  reduce using rule 33 (compound_stmt)


State 168

   93 args: args ',' . expr

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    expr      go to state 173
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 169

   89 unary: unary $@7 '(' args ')' .

    $default  reduce using rule 89 (unary)


State 170

   24 param_decl: type_specifier pointers ID '[' const_expr ']' .

    $default  reduce using rule 24 (param_decl)


State 171

   45 stmt: IF '(' expr ')' stmt ELSE . stmt

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    WRITE_INT      shift, and go to state 55
    WRITE_CHAR     shift, and go to state 56
    WRITE_STRING   shift, and go to state 57
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67
    ';'            shift, and go to state 68

    $default  reduce using rule 38 ($@4)

    stmt      go to state 174
    $@4       go to state 71
    expr      go to state 72
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 172

   47 stmt: FOR '(' expr_e ';' expr_e ';' . expr_e ')' stmt

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67

    $default  reduce using rule 54 (expr_e)

    expr_e    go to state 175
    expr      go to state 132
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 173

   93 args: args ',' expr .

    $default  reduce using rule 93 (args)


State 174

   45 stmt: IF '(' expr ')' stmt ELSE stmt .

    $default  reduce using rule 45 (stmt)


State 175

   47 stmt: FOR '(' expr_e ';' expr_e ';' expr_e . ')' stmt

    ')'  shift, and go to state 176


State 176

   47 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' . stmt

    '&'            shift, and go to state 47
    '-'            shift, and go to state 48
    '*'            shift, and go to state 49
    '!'            shift, and go to state 50
    INCOP          shift, and go to state 51
    DECOP          shift, and go to state 52
    '('            shift, and go to state 53
    NULL_TOKEN     shift, and go to state 54
    WRITE_INT      shift, and go to state 55
    WRITE_CHAR     shift, and go to state 56
    WRITE_STRING   shift, and go to state 57
    RETURN         shift, and go to state 58
    IF             shift, and go to state 59
    WHILE          shift, and go to state 60
    FOR            shift, and go to state 61
    BREAK          shift, and go to state 62
    CONTINUE       shift, and go to state 63
    ID             shift, and go to state 64
    INTEGER_CONST  shift, and go to state 65
    CHAR_CONST     shift, and go to state 66
    STRING         shift, and go to state 67
    ';'            shift, and go to state 68

    $default  reduce using rule 38 ($@4)

    stmt      go to state 177
    $@4       go to state 71
    expr      go to state 72
    or_expr   go to state 73
    or_list   go to state 74
    and_expr  go to state 75
    and_list  go to state 76
    binary    go to state 77
    unary     go to state 78


State 177

   47 stmt: FOR '(' expr_e ';' expr_e ';' expr_e ')' stmt .

    $default  reduce using rule 47 (stmt)
